(()=>{var __webpack_modules__={"./src/game/assets/builder.ts":function(__unused_webpack_module,exports,__webpack_require__){"use strict";eval('\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.RawAssets = void 0;\nconst pixi_js_1 = __webpack_require__(/*! pixi.js */ "./node_modules/pixi.js/lib/index.js");\nexports.RawAssets = [\n    {\n        name: \'gun_long\',\n        generator: () => __awaiter(void 0, void 0, void 0, function* () {\n            const graphic = new pixi_js_1.Graphics();\n            graphic.lineStyle(2, 0x4b4b4b);\n            graphic.beginFill(0xfdfdfd);\n            graphic.drawRoundedRect(0, 0, 10, 122, 30);\n            graphic.endFill();\n            return graphic;\n        })\n    },\n    {\n        name: \'gun_short\',\n        generator: () => __awaiter(void 0, void 0, void 0, function* () {\n            const graphic = new pixi_js_1.Graphics();\n            graphic.lineStyle(2, 0x4b4b4b);\n            graphic.beginFill(0xfdfdfd);\n            graphic.drawRect(0, 0, 18, 66);\n            graphic.endFill();\n            return graphic;\n        })\n    }\n];\n\n\n//# sourceURL=webpack://squads/./src/game/assets/builder.ts?')},"./src/game/assets/loader.ts":function(__unused_webpack_module,exports){"use strict";eval('\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.Loader = void 0;\nclass Loader {\n    constructor(game) {\n        this.assets = new Map();\n        this.game = game;\n    }\n    load(assets, onUpdate, onProgress, onComplete) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (assets.length === 0) {\n                onProgress === null || onProgress === void 0 ? void 0 : onProgress(1);\n                onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n                return;\n            }\n            for (const [index, asset] of assets.entries()) {\n                try {\n                    onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(`Loading asset: ${asset.name}`);\n                    yield this.create(asset);\n                    onProgress === null || onProgress === void 0 ? void 0 : onProgress((index + 1) / assets.length);\n                }\n                catch (error) {\n                    console.error(`Error loading asset: ${asset.name}`, error);\n                }\n            }\n            onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(`Done loading assets!`);\n            yield new Promise(resolve => setTimeout(resolve, 1000));\n            onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n        });\n    }\n    create(asset) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.assets.has(asset.name))\n                return;\n            const graphics = yield asset.generator();\n            const texture = this.game.app.renderer.generateTexture(graphics);\n            graphics.destroy({\n                children: true,\n                texture: true,\n                baseTexture: true\n            });\n            this.assets.set(asset.name, texture);\n        });\n    }\n}\nexports.Loader = Loader;\n\n\n//# sourceURL=webpack://squads/./src/game/assets/loader.ts?')},"./src/game/basic/agent.ts":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.Agent = void 0;\nconst matter_js_1 = __webpack_require__(/*! matter-js */ "./node_modules/matter-js/build/matter.js");\nconst gameObject_1 = __webpack_require__(/*! ./gameObject */ "./src/game/basic/gameObject.ts");\nconst pixi_js_1 = __webpack_require__(/*! pixi.js */ "./node_modules/pixi.js/lib/index.js");\nconst math_1 = __webpack_require__(/*! ../util/math */ "./src/game/util/math.ts");\nclass Agent extends gameObject_1.GameObject {\n    get size() {\n        var _a;\n        return (_a = this.body.circleRadius) !== null && _a !== void 0 ? _a : 0;\n    }\n    constructor(game) {\n        super(game, matter_js_1.Bodies.circle(0, 0, 50, {\n            friction: 0,\n            frictionAir: 0,\n            frictionStatic: 0\n        }), {\n            layer: "player"\n        });\n        this._rotation = 0;\n        this.rotation = 0;\n        this.rotationSpeed = 10;\n        this.center = new pixi_js_1.Graphics();\n        this.hands = new pixi_js_1.Container();\n        this.leftHand = new pixi_js_1.Graphics();\n        this.rightHand = new pixi_js_1.Graphics();\n        this.equipped = null;\n        this.animations = [];\n        this.punch = (side) => {\n            if (this.equipped != null)\n                return;\n            this.animate({\n                target: new pixi_js_1.Point(35, -20),\n                side,\n                start: this.game.app.ticker.lastTime,\n                duration: 250,\n                next: "back"\n            });\n        };\n        this.animate = (animation) => {\n            this.animations = this.animations.filter(a => a.side !== animation.side);\n            this.animations.push(animation);\n        };\n        this.getHand = (side) => {\n            return side == \'left\' ? { sign: -1, hand: this.leftHand } : { sign: 1, hand: this.rightHand };\n        };\n        this.info.trackBodyRotation = false;\n        this.center.beginFill(0xd5a98a);\n        this.center.drawCircle(0, 0, this.size);\n        this.center.endFill();\n        this.container.addChild(this.center);\n        this.hands.position.set(this.size * 2 / 3, 0);\n        this.container.addChild(this.hands);\n        this.leftHand.lineStyle({ width: 3, color: 0x000000, alignment: 0.5 });\n        this.leftHand.beginFill(0xd5a98a);\n        this.leftHand.drawCircle(0, 0, this.size * 6 / 19);\n        this.leftHand.endFill();\n        this.leftHand.position.set(0, -this.size * 2 / 3);\n        this.hands.addChild(this.leftHand);\n        this.rightHand.lineStyle({ width: 3, color: 0x000000, alignment: 0.5 });\n        this.rightHand.beginFill(0xd5a98a);\n        this.rightHand.drawCircle(0, 0, this.size * 6 / 19);\n        this.rightHand.endFill();\n        this.rightHand.position.set(0, this.size * 2 / 3);\n        this.hands.addChild(this.rightHand);\n    }\n    update(delta) {\n        for (let i = 0; i < this.rotationSpeed; i++) {\n            const diff = (0, math_1.angleBetween)(this._rotation, this.rotation);\n            if (Math.abs(diff) < 0.01) {\n                this._rotation = this.rotation;\n                break;\n            }\n            const modify = (0, math_1.angleTo)(this._rotation, this.rotation) * (Math.PI / 180) * delta;\n            this._rotation = (modify + this._rotation) % (2 * Math.PI);\n        }\n        this.container.rotation = this._rotation;\n        for (let i = 0; i < this.animations.length; i++) {\n            const anim = this.animations[i];\n            const { hand, sign } = this.getHand(anim.side);\n            const target = new pixi_js_1.Point(anim.target.x, anim.target.y * sign);\n            const total = target.add({ x: 0, y: this.size * 2 / 3 * sign });\n            const elapsed = Math.max(0, Math.min(this.game.app.ticker.lastTime - anim.start, anim.duration));\n            hand.position.x = (0, math_1.map)((0, math_1.smoothstep)(0, anim.duration, elapsed), 0, 1, hand.position.x, total.x);\n            hand.position.y = (0, math_1.map)((0, math_1.smoothstep)(0, anim.duration, elapsed), 0, 1, hand.position.y, total.y);\n            if (Math.abs(hand.position.x - total.x) < 0.5 && Math.abs(hand.position.x - total.x) < 0.5) {\n                if (anim.next == "back") {\n                    anim.start = this.game.app.ticker.lastTime;\n                    anim.target = new pixi_js_1.Point(0, 0);\n                    delete anim.next;\n                }\n                else {\n                    this.animations.splice(i, 1);\n                    i--;\n                }\n            }\n        }\n        super.update(delta);\n    }\n}\nexports.Agent = Agent;\n\n\n//# sourceURL=webpack://squads/./src/game/basic/agent.ts?')},"./src/game/basic/fonts.ts":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.Fonts = void 0;\nconst pixi_js_1 = __webpack_require__(/*! pixi.js */ "./node_modules/pixi.js/lib/index.js");\nclass Fonts {\n    constructor(game) {\n        this.game = game;\n        pixi_js_1.BitmapFont.from("DebugFont", {\n            fill: 0xffffff,\n            fontSize: 12,\n            fontFamily: "monospace",\n        }, {\n            chars: "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789.,!?-+/():;%&`\'*#=[]\\" ",\n        });\n    }\n}\nexports.Fonts = Fonts;\n\n\n//# sourceURL=webpack://squads/./src/game/basic/fonts.ts?')},"./src/game/basic/gameObject.ts":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.GameObject = void 0;\nconst display_1 = __webpack_require__(/*! @pixi/display */ "./node_modules/@pixi/display/lib/index.js");\nconst matter_js_1 = __webpack_require__(/*! matter-js */ "./node_modules/matter-js/build/matter.js");\nconst pixi_js_1 = __webpack_require__(/*! pixi.js */ "./node_modules/pixi.js/lib/index.js");\nclass GameObject {\n    get position() {\n        return this.body.position;\n    }\n    constructor(game, body, options) {\n        this.container = new display_1.Container();\n        this.info = {\n            trackBodyRotation: true\n        };\n        this.game = game;\n        this.body = body;\n        matter_js_1.Composite.add(this.game.engine.world, this.body);\n        this.game.layers[options.layer].addChild(this.container);\n        if (options.cull) {\n            if (options.cull == "auto") {\n                this.container.cullable = true;\n            }\n            else {\n                this.info.cull = options.cull;\n            }\n        }\n    }\n    update(delta) {\n        const pos = this.game.camera.in(new pixi_js_1.Point(this.position.x, this.position.y));\n        if (this.info.cull) {\n            this.container.visible = this.container.renderable = this.game.camera.cull(pos, this.info.cull);\n        }\n        this.container.position.set(pos.x, pos.y);\n        this.container.scale.set(this.game.camera.scale);\n        if (this.info.trackBodyRotation) {\n            this.container.rotation = this.body.angle;\n        }\n    }\n}\nexports.GameObject = GameObject;\n\n\n//# sourceURL=webpack://squads/./src/game/basic/gameObject.ts?')},"./src/game/core/app.ts":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.app = void 0;\nconst pixi_js_1 = __webpack_require__(/*! pixi.js */ "./node_modules/pixi.js/lib/index.js");\nexports.app = new pixi_js_1.Application({\n    backgroundColor: 0x1099bb,\n    antialias: true,\n    autoStart: false,\n    resizeTo: window\n});\n\n\n//# sourceURL=webpack://squads/./src/game/core/app.ts?')},"./src/game/core/engine.ts":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.engine = void 0;\nconst matter_js_1 = __webpack_require__(/*! matter-js */ "./node_modules/matter-js/build/matter.js");\nexports.engine = matter_js_1.Engine.create({\n    gravity: {\n        scale: 0\n    }\n});\n\n\n//# sourceURL=webpack://squads/./src/game/core/engine.ts?')},"./src/game/entry.ts":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst builder_1 = __webpack_require__(/*! ./assets/builder */ \"./src/game/assets/builder.ts\");\nconst app_1 = __webpack_require__(/*! ./core/app */ \"./src/game/core/app.ts\");\nconst engine_1 = __webpack_require__(/*! ./core/engine */ \"./src/game/core/engine.ts\");\nconst game_1 = __webpack_require__(/*! ./main/game */ \"./src/game/main/game.ts\");\n(() => {\n    const entry = document.getElementById('entry');\n    const load = document.getElementById('load');\n    const progress = document.getElementById('progress');\n    const progressText = document.getElementById('progress-text');\n    if (!entry || !load || !progress || !progressText) {\n        throw new Error(`Missing entry elements!`);\n    }\n    app_1.app.resizeTo = entry.parentElement;\n    entry.appendChild(app_1.app.view);\n    const game = new game_1.Game(app_1.app, engine_1.engine);\n    game.loader.load(builder_1.RawAssets, (update) => {\n        progressText.innerText = update;\n    }, (value) => {\n        progress.style.width = `${value * 100}%`;\n    }, () => {\n        load.style.display = 'none';\n        game.start();\n    });\n})();\n\n\n//# sourceURL=webpack://squads/./src/game/entry.ts?")},"./src/game/gui/uiBuilder.ts":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.UIBuilder = void 0;\nconst pixi_js_1 = __webpack_require__(/*! pixi.js */ "./node_modules/pixi.js/lib/index.js");\nconst uiComponent_1 = __webpack_require__(/*! ./uiComponent */ "./src/game/gui/uiComponent.ts");\nconst math_1 = __webpack_require__(/*! ../util/math */ "./src/game/util/math.ts");\nclass UIBuilder {\n    constructor(manager) {\n        this.elements = {};\n        this.minimap = new pixi_js_1.Sprite();\n        this.worldmap = new pixi_js_1.Sprite();\n        this.player = new pixi_js_1.Graphics();\n        this.viewport = new pixi_js_1.Graphics();\n        this.generateMapTexture = () => {\n            const generator = new uiComponent_1.UIComponent(this.manager, undefined, {\n                size: (w, h) => {\n                    const s = Math.min(w, h);\n                    return { w: s, h: s };\n                },\n                anchor: { w: 0.5, h: 0.5 },\n                self: { w: 0.5, h: 0.5 },\n            });\n            const size = 1024;\n            const background = new pixi_js_1.Graphics();\n            background.beginFill(0x000000, 0.1);\n            background.drawRect(0, 0, size, size);\n            background.endFill();\n            generator.container.addChild(background);\n            const mask = new pixi_js_1.Graphics();\n            mask.beginFill(0xffffff);\n            mask.drawRect(0, 0, size, size);\n            mask.endFill();\n            generator.container.addChild(mask);\n            const container = new pixi_js_1.Container();\n            container.mask = mask;\n            generator.container.addChild(container);\n            for (let blip of this.manager.worldmap.blips) {\n                let gx = (0, math_1.map)(blip.x, -this.manager.worldmap.range / 2, this.manager.worldmap.range / 2, 0, generator.width);\n                let gy = (0, math_1.map)(blip.y, -this.manager.worldmap.range / 2, this.manager.worldmap.range / 2, 0, generator.height);\n                blip.graphic.position.set(gx, gy);\n                blip.graphic.scale.set(size / this.manager.worldmap.range);\n                container.addChild(blip.graphic);\n            }\n            const texture = this.manager.game.app.renderer.generateTexture(generator.container);\n            generator.destroy();\n            this.manager.worldmap.blips = [];\n            return texture;\n        };\n        this.manager = manager;\n        this.debug = new pixi_js_1.BitmapText("", {\n            fontName: "DebugFont",\n            align: "left",\n        });\n    }\n    start() {\n        const texture = this.generateMapTexture();\n        (() => {\n            this.elements.minimapContainer = new uiComponent_1.UIComponent(this.manager, null, {\n                size: { w: 200, h: 200 },\n                anchor: { w: 0, h: 0 },\n                offset: { x: 20, y: 20 },\n            });\n            const size = 200;\n            const background = new pixi_js_1.Graphics();\n            background.beginFill(0x000000, 0.33);\n            background.drawRoundedRect(0, 0, size, size, 10);\n            background.endFill();\n            this.elements.minimapContainer.container.addChild(background);\n            const fill = new pixi_js_1.Graphics();\n            fill.beginFill(0x04232b);\n            fill.drawRect(10, 10, size - 20, size - 20);\n            fill.endFill();\n            this.elements.minimapContainer.container.addChild(fill);\n            const mask = new pixi_js_1.Graphics();\n            mask.beginFill(0xffffff);\n            mask.drawRect(10, 10, size - 20, size - 20);\n            mask.endFill();\n            this.elements.minimapContainer.container.addChild(mask);\n            const container = new pixi_js_1.Container();\n            container.mask = mask;\n            this.elements.minimapContainer.container.addChild(container);\n            this.elements.minimap = new uiComponent_1.UIComponent(this.manager, container, {\n                size: { w: size - 20, h: size - 20 },\n                anchor: { w: 0.5, h: 0.5 },\n                self: { w: 0.5, h: 0.5 },\n            });\n            this.minimap.texture = texture.clone();\n            this.minimap.anchor.set(0.5);\n            this.minimap.position.set(size / 2, size / 2);\n            this.minimap.width = this.minimap.height = size - 20;\n            this.minimap.scale = this.minimap.scale.multiplyScalar(this.manager.game.input.maxZoom);\n            this.elements.minimap.container.addChild(this.minimap);\n            const center = new pixi_js_1.Graphics();\n            center.beginFill(0xffffff);\n            center.drawCircle(0, 0, this.manager.game.playerManager.agent.size * (size / this.manager.worldmap.range) * 2);\n            center.endFill();\n            center.position.set(size / 2, size / 2);\n            this.elements.minimap.container.addChild(center);\n        })();\n        (() => {\n            this.elements.debug = new uiComponent_1.UIComponent(this.manager, null, {\n                size: { w: 150, h: 50 },\n                anchor: { w: 0, h: 1 },\n                offset: { x: 20, y: -70 },\n            });\n            const background = new pixi_js_1.Graphics();\n            background.beginFill(0x000000, 0.33);\n            background.drawRoundedRect(0, 0, 150, 50, 10);\n            background.endFill();\n            this.elements.debug.container.addChild(background);\n            this.debug.position.set(10, 8);\n            this.elements.debug.container.addChild(this.debug);\n        })();\n        (() => {\n            this.elements.worldmapContainer = new uiComponent_1.UIComponent(this.manager, null, {\n                size: (w, h) => {\n                    const s = Math.min(w, h) * 0.75;\n                    return { w: s, h: s };\n                },\n                anchor: { w: 0.5, h: 0.5 },\n                self: { w: 0.5, h: 0.5 },\n            });\n            const size = 500;\n            const background = new pixi_js_1.Graphics();\n            background.beginFill(0x000000, 0.33);\n            background.drawRoundedRect(0, 0, size, size, 10);\n            background.endFill();\n            this.elements.worldmapContainer.container.addChild(background);\n            const fill = new pixi_js_1.Graphics();\n            fill.beginFill(0x04232b);\n            fill.drawRect(10, 10, size - 20, size - 20);\n            fill.endFill();\n            this.elements.worldmapContainer.container.addChild(fill);\n            const mask = new pixi_js_1.Graphics();\n            mask.beginFill(0xffffff);\n            mask.drawRect(10, 10, size - 20, size - 20);\n            mask.endFill();\n            this.elements.worldmapContainer.container.addChild(mask);\n            const container = new pixi_js_1.Container();\n            container.mask = mask;\n            this.elements.worldmapContainer.container.addChild(container);\n            this.elements.worldmap = new uiComponent_1.UIComponent(this.manager, container, {\n                size: { w: size - 20, h: size - 20 },\n                anchor: { w: 0.5, h: 0.5 },\n                self: { w: 0.5, h: 0.5 },\n            });\n            this.worldmap.texture = texture.clone();\n            this.worldmap.anchor.set(0.5);\n            this.worldmap.position.set(size / 2, size / 2);\n            this.worldmap.width = this.worldmap.height = size - 20;\n            container.addChild(this.worldmap);\n            this.player.beginFill(0xd5a98a);\n            this.player.drawCircle(0, 0, this.manager.game.playerManager.agent.size * (size / this.manager.worldmap.range));\n            this.player.endFill();\n            this.player.position.set(size / 2, size / 2);\n            container.addChild(this.player);\n            container.addChild(this.viewport);\n        })();\n        texture.destroy();\n        this.manager.worldmap.setVisibility(false);\n    }\n}\nexports.UIBuilder = UIBuilder;\n\n\n//# sourceURL=webpack://squads/./src/game/gui/uiBuilder.ts?')},"./src/game/gui/uiComponent.ts":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.UIComponent = void 0;\nconst pixi_js_1 = __webpack_require__(/*! pixi.js */ \"./node_modules/pixi.js/lib/index.js\");\nclass UIComponent {\n    get width() {\n        return this.container.width;\n    }\n    get height() {\n        return this.container.height;\n    }\n    get globalWidth() {\n        return this.manager.game.width;\n    }\n    get globalHeight() {\n        return this.manager.game.height;\n    }\n    get parentWidth() {\n        var _a, _b;\n        return (_b = (_a = this.parent) === null || _a === void 0 ? void 0 : _a.width) !== null && _b !== void 0 ? _b : this.globalWidth;\n    }\n    get parentHeight() {\n        var _a, _b;\n        return (_b = (_a = this.parent) === null || _a === void 0 ? void 0 : _a.height) !== null && _b !== void 0 ? _b : this.globalHeight;\n    }\n    get relativeWidth() {\n        return this.relativeTo === 'parent' ? this.parentWidth : this.globalWidth;\n    }\n    get relativeHeight() {\n        return this.relativeTo === 'parent' ? this.parentHeight : this.globalHeight;\n    }\n    constructor(manager, parent, options = {}) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n        this.children = [];\n        this.container = new pixi_js_1.Container();\n        this.size = 'static';\n        this.relativeTo = 'parent';\n        this.position = 'relative';\n        this.anchor = { w: 0, h: 0 };\n        this.offset = { x: 0, y: 0 };\n        this.self = { w: 0, h: 0 };\n        this.manager = manager;\n        this.parent = parent;\n        this.size = (_a = options.size) !== null && _a !== void 0 ? _a : this.size;\n        this.relativeTo = (_b = options.relativeTo) !== null && _b !== void 0 ? _b : this.relativeTo;\n        this.position = options.position ? (options.position === 'relative' ? 'relative' : 'static') : this.position;\n        this.anchor = (_c = options.anchor) !== null && _c !== void 0 ? _c : this.anchor;\n        this.offset = (_d = options.offset) !== null && _d !== void 0 ? _d : this.offset;\n        this.self = (_e = options.self) !== null && _e !== void 0 ? _e : this.self;\n        if (options.position != 'relative') {\n            this.container.position.set((_g = (_f = options.position) === null || _f === void 0 ? void 0 : _f.x) !== null && _g !== void 0 ? _g : 0, (_j = (_h = options.position) === null || _h === void 0 ? void 0 : _h.y) !== null && _j !== void 0 ? _j : 0);\n        }\n        if (parent instanceof pixi_js_1.Container) {\n            parent.addChild(this.container);\n        }\n        else if (parent instanceof UIComponent) {\n            parent.children.push(this);\n        }\n        else if (parent === null) {\n            this.manager.game.layers.ui.addChild(this.container);\n            manager.children.push(this);\n        }\n    }\n    resize() {\n        if (typeof this.size === 'function') {\n            const { w, h } = this.size(this.relativeWidth, this.relativeHeight);\n            this.container.width = w;\n            this.container.height = h;\n        }\n        else if (this.size != 'static') {\n            this.container.width = typeof this.size.w === 'number' ? this.size.w : this.relativeWidth * (parseInt(this.size.w) / 100);\n            this.container.height = typeof this.size.h === 'number' ? this.size.h : this.relativeHeight * (parseInt(this.size.h) / 100);\n        }\n        if (this.position === 'relative') {\n            this.container.x = this.relativeWidth * this.anchor.w + this.offset.x - this.container.width * this.self.w;\n            this.container.y = this.relativeHeight * this.anchor.h + this.offset.y - this.container.height * this.self.h;\n        }\n        for (const child of this.children) {\n            child.resize();\n        }\n    }\n    destroy() {\n        if (this.parent instanceof UIComponent) {\n            this.parent.children.splice(this.parent.children.indexOf(this), 1);\n        }\n        else if (this.parent instanceof pixi_js_1.Container) {\n            this.parent.removeChild(this.container);\n        }\n        else if (this.parent === null) {\n            this.manager.children.splice(this.manager.children.indexOf(this), 1);\n        }\n        this.container.destroy({\n            children: true,\n            texture: true\n        });\n        for (const child of this.children) {\n            child.destroy();\n        }\n    }\n}\nexports.UIComponent = UIComponent;\n\n\n//# sourceURL=webpack://squads/./src/game/gui/uiComponent.ts?")},"./src/game/gui/uiManager.ts":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.UIManager = void 0;\nconst uiBuilder_1 = __webpack_require__(/*! ./uiBuilder */ "./src/game/gui/uiBuilder.ts");\nconst math_1 = __webpack_require__(/*! ../util/math */ "./src/game/util/math.ts");\nclass UIManager {\n    constructor(game) {\n        this.children = [];\n        this.worldmap = {\n            visible: false,\n            range: 10000,\n            interactionMode: \'toggle\',\n            blips: [],\n            setVisibility: (set) => {\n                this.worldmap.visible = set;\n                this.builder.elements.worldmapContainer && (this.builder.elements.worldmapContainer.container.visible = set);\n            },\n            register: (x, y, graphic) => {\n                this.worldmap.blips.push({ x, y, graphic });\n            }\n        };\n        this.debug = {\n            setHeight: (height) => {\n                this.builder.elements.debug && (this.builder.elements.debug.container.height = height);\n            }\n        };\n        this.game = game;\n        this.builder = new uiBuilder_1.UIBuilder(this);\n    }\n    update(delta) {\n        const w = this.builder.minimap.width / this.game.input.maxZoom;\n        const h = this.builder.minimap.height / this.game.input.maxZoom;\n        const mx = (0, math_1.map)(-this.game.playerManager.agent.position.x * this.game.input.maxZoom, -this.worldmap.range / 2, this.worldmap.range / 2, 0, w) + 10;\n        const my = (0, math_1.map)(-this.game.playerManager.agent.position.y * this.game.input.maxZoom, -this.worldmap.range / 2, this.worldmap.range / 2, 0, h) + 10;\n        this.builder.minimap.position.set(mx, my);\n        if (this.worldmap.visible) {\n            const px = (0, math_1.map)(this.game.playerManager.agent.position.x, -this.worldmap.range / 2, this.worldmap.range / 2, 0, this.builder.worldmap.width) + 10;\n            const py = (0, math_1.map)(this.game.playerManager.agent.position.y, -this.worldmap.range / 2, this.worldmap.range / 2, 0, this.builder.worldmap.height) + 10;\n            this.builder.player.position.set(px, py);\n            this.builder.viewport.clear();\n            this.builder.viewport.lineStyle(1, 0xffffff);\n            const tl = this.game.camera.out(0, 0);\n            const br = this.game.camera.out(this.game.width, this.game.height);\n            const tlx = (0, math_1.map)(tl.x, -this.worldmap.range / 2, this.worldmap.range / 2, 0, this.builder.worldmap.width) + 10;\n            const tly = (0, math_1.map)(tl.y, -this.worldmap.range / 2, this.worldmap.range / 2, 0, this.builder.worldmap.height) + 10;\n            const brx = (0, math_1.map)(br.x, -this.worldmap.range / 2, this.worldmap.range / 2, 0, this.builder.worldmap.width) + 10;\n            const bry = (0, math_1.map)(br.y, -this.worldmap.range / 2, this.worldmap.range / 2, 0, this.builder.worldmap.height) + 10;\n            this.builder.viewport.drawRect(tlx, tly, brx - tlx, bry - tly);\n        }\n    }\n    resize() {\n        for (const child of this.children) {\n            child.resize();\n        }\n    }\n}\nexports.UIManager = UIManager;\n\n\n//# sourceURL=webpack://squads/./src/game/gui/uiManager.ts?')},"./src/game/input/inputManager.ts":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.InputManager = void 0;\nconst matter_js_1 = __webpack_require__(/*! matter-js */ \"./node_modules/matter-js/build/matter.js\");\nconst keyboard_1 = __webpack_require__(/*! ./keyboard */ \"./src/game/input/keyboard.ts\");\nconst mouse_1 = __webpack_require__(/*! ./mouse */ \"./src/game/input/mouse.ts\");\nconst math_1 = __webpack_require__(/*! ../util/math */ \"./src/game/util/math.ts\");\nclass InputManager {\n    get maxZoom() {\n        return Math.pow(this.scrollAmount, this.scrollBounds.max);\n    }\n    constructor(game) {\n        this.mousePos = { x: 0, y: 0 };\n        this.click = false;\n        this.scrollCount = 0;\n        this.scrollAmount = 1.33;\n        this.scrollBounds = { min: -2, max: 4 };\n        this.game = game;\n        this.mouse = new mouse_1.Mouse();\n        this.keyboard = new keyboard_1.Keyboard();\n        this.game.app.stage.eventMode = \"static\";\n        this.game.app.stage.hitArea = this.game.app.screen;\n        this.game.app.stage.addEventListener(\"pointermove\", (e) => {\n            this.mousePos = { x: e.x, y: e.y };\n        });\n        this.game.app.stage.addEventListener(\"click\", (e) => {\n            this.click = true;\n        });\n        this.game.app.stage.addEventListener(\"rightclick\", (e) => {\n            this.click = true;\n        });\n        this.mouse.scroll((deltaY) => {\n            this.scrollCount += deltaY;\n            this.scrollCount = (0, math_1.clamp)(this.scrollCount, this.scrollBounds.min, this.scrollBounds.max);\n            this.game.camera.zoom = Math.pow(this.scrollCount < 0 ? this.scrollAmount : (1 / this.scrollAmount), Math.abs(this.scrollCount));\n        });\n        document.addEventListener(\"contextmenu\", (e) => {\n            e.preventDefault();\n        }, false);\n        this.keyboard.key('m').press(() => {\n            this.game.gui.worldmap.setVisibility(!this.game.gui.worldmap.visible);\n        }).release(() => {\n            if (this.game.gui.worldmap.interactionMode != 'toggle') {\n                this.game.gui.worldmap.setVisibility(false);\n            }\n        });\n    }\n    update(delta) {\n        const center = { x: this.game.width / 2, y: this.game.height / 2 };\n        const diff = { x: this.mousePos.x - center.x, y: this.mousePos.y - center.y };\n        const rotation = Math.atan2(diff.y, diff.x);\n        this.game.playerManager.agent.rotation = rotation;\n        const raw = { x: 0, y: 0 };\n        if (this.keyboard.key('ArrowUp').isDown || this.keyboard.key('w').isDown)\n            raw.y -= 1;\n        if (this.keyboard.key('ArrowDown').isDown || this.keyboard.key('s').isDown)\n            raw.y += 1;\n        if (this.keyboard.key('ArrowLeft').isDown || this.keyboard.key('a').isDown)\n            raw.x -= 1;\n        if (this.keyboard.key('ArrowRight').isDown || this.keyboard.key('d').isDown)\n            raw.x += 1;\n        const move = matter_js_1.Vector.mult(matter_js_1.Vector.normalise(raw), 3);\n        matter_js_1.Body.setVelocity(this.game.playerManager.agent.body, move);\n    }\n    reset() {\n        this.click = false;\n    }\n}\nexports.InputManager = InputManager;\n\n\n//# sourceURL=webpack://squads/./src/game/input/inputManager.ts?")},"./src/game/input/keyboard.ts":(__unused_webpack_module,exports)=>{"use strict";eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Keyboard = void 0;\nclass Key {\n    constructor(value) {\n        this.state = false;\n        this.isDown = false;\n        this.isUp = true;\n        this._press = [];\n        this._release = [];\n        this.press = (f) => {\n            this._press.push(f);\n            return this;\n        };\n        this.release = (f) => {\n            this._release.push(f);\n            return this;\n        };\n        this.value = value;\n    }\n}\nclass Keyboard {\n    constructor() {\n        this.key = (value) => {\n            const find = this.keys.find(k => k.value == value);\n            if (find)\n                return find;\n            const key = new Key(value);\n            this.keys.push(key);\n            return key;\n        };\n        this.getKeys = (...values) => {\n            return values.map(this.key);\n        };\n        this.keys = [];\n        this.nDown = 0;\n        const downListener = this.onDown.bind(this);\n        const upListener = this.onUp.bind(this);\n        window.addEventListener('keydown', downListener, false);\n        window.addEventListener('keyup', upListener, false);\n        this.destroy = () => {\n            window.removeEventListener('keydown', downListener);\n            window.removeEventListener('keyup', upListener);\n        };\n    }\n    onDown(e) {\n        const key = this.keys.find(k => k.value == e.key);\n        if (key) {\n            e.preventDefault();\n            if (key.isUp) {\n                key.state = !key.state;\n                key._press.forEach(f => f());\n                this.nDown++;\n            }\n            key.isDown = true;\n            key.isUp = false;\n        }\n    }\n    onUp(e) {\n        const key = this.keys.find(k => k.value == e.key);\n        if (key) {\n            e.preventDefault();\n            if (key.isDown) {\n                key._release.forEach(f => f());\n                this.nDown = Math.max(0, this.nDown - 1);\n            }\n            key.isDown = false;\n            key.isUp = true;\n        }\n    }\n}\nexports.Keyboard = Keyboard;\n\n\n//# sourceURL=webpack://squads/./src/game/input/keyboard.ts?")},"./src/game/input/mouse.ts":(__unused_webpack_module,exports)=>{"use strict";eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Mouse = void 0;\nclass Mouse {\n    constructor() {\n        this._scroll = (deltaY) => { };\n        this.scroll = (f) => {\n            this._scroll = f;\n            return this;\n        };\n        const scrollListener = (e) => {\n            e.preventDefault();\n            this._scroll(e.deltaY == 0 ? 0 : (e.deltaY > 0 ? 1 : -1));\n        };\n        window.addEventListener('wheel', scrollListener, { passive: false });\n        this.destroy = () => {\n            window.removeEventListener('wheel', scrollListener);\n        };\n    }\n}\nexports.Mouse = Mouse;\n\n\n//# sourceURL=webpack://squads/./src/game/input/mouse.ts?")},"./src/game/main/camera.ts":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.Camera = void 0;\n__webpack_require__(/*! @pixi/math-extras */ "./node_modules/@pixi/math-extras/lib/index.js");\nconst math_1 = __webpack_require__(/*! ../util/math */ "./src/game/util/math.ts");\nclass Camera {\n    get position() {\n        return this._pos;\n    }\n    set position(value) {\n        this.targetPos = value;\n    }\n    get scale() {\n        return this._zoom * this.aspectControl;\n    }\n    set zoom(value) {\n        this.targetZoom = value;\n    }\n    constructor(game) {\n        this.targetPos = { x: 0, y: 0 };\n        this.targetZoom = 1;\n        this._pos = this.targetPos;\n        this._zoom = this.targetZoom;\n        this.moveEase = 0.5;\n        this.scaleEase = 0.75;\n        this.vision = 1000;\n        this.aspectControl = 1;\n        this.calculate = () => {\n            const max = Math.max(this.game.width, this.game.height);\n            this.aspectControl = max / this.vision;\n        };\n        this.in = (a, b) => {\n            const point = typeof a === "number" ? { x: a, y: b !== null && b !== void 0 ? b : a } : a;\n            return {\n                x: (point.x - this.position.x) * this.scale + this.game.width / 2,\n                y: (point.y - this.position.y) * this.scale + this.game.height / 2\n            };\n        };\n        this.out = (a, b) => {\n            const point = typeof a === "number" ? { x: a, y: b !== null && b !== void 0 ? b : a } : a;\n            return {\n                x: (point.x - this.game.width / 2) / this.scale + this.position.x,\n                y: (point.y - this.game.height / 2) / this.scale + this.position.y\n            };\n        };\n        this.cull = (point, r) => {\n            const { width, height } = this.game;\n            return !(point.x < -r || point.x > width + r || point.y < -r || point.y > height + r);\n        };\n        this.game = game;\n        this.calculate();\n    }\n    update(delta, smooth = { position: true, zoom: true }) {\n        this._pos.x = smooth.position ? (0, math_1.lerp)(this._pos.x, this.targetPos.x, 1 - Math.pow(this.moveEase, delta)) : this.targetPos.x;\n        this._pos.y = smooth.position ? (0, math_1.lerp)(this._pos.y, this.targetPos.y, 1 - Math.pow(this.moveEase, delta)) : this.targetPos.y;\n        this._zoom = smooth.zoom ? Math.exp((0, math_1.lerp)(Math.log(this._zoom), Math.log(this.targetZoom), 1 - Math.pow(this.scaleEase, delta))) : this.targetZoom;\n    }\n    resize() {\n        this.calculate();\n    }\n}\nexports.Camera = Camera;\n\n\n//# sourceURL=webpack://squads/./src/game/main/camera.ts?')},"./src/game/main/debug.ts":(__unused_webpack_module,exports)=>{"use strict";eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.Debug = void 0;\nclass Debug {\n    constructor(game) {\n        this.data = new Map();\n        this.game = game;\n    }\n    set(key, value) {\n        if (this.data.size > 3 && !this.data.has("key"))\n            return;\n        this.data.set(key, {\n            value,\n            timestamp: Date.now()\n        });\n    }\n    update(delta) {\n        let text = "";\n        this.data.forEach(({ value }, k) => {\n            text += `${k}: ${value}` + "\\n";\n        });\n        this.game.gui.builder.debug.text = text;\n    }\n    reset() {\n        this.data.forEach((v, k) => {\n            if (Date.now() - v.timestamp > 5000) {\n                this.data.delete(k);\n            }\n        });\n    }\n}\nexports.Debug = Debug;\n\n\n//# sourceURL=webpack://squads/./src/game/main/debug.ts?')},"./src/game/main/game.ts":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.Game = void 0;\nconst pixi_js_1 = __webpack_require__(/*! pixi.js */ "./node_modules/pixi.js/lib/index.js");\nconst matter_js_1 = __webpack_require__(/*! matter-js */ "./node_modules/matter-js/build/matter.js");\nconst inputManager_1 = __webpack_require__(/*! ../input/inputManager */ "./src/game/input/inputManager.ts");\nconst grid_1 = __webpack_require__(/*! ./grid */ "./src/game/main/grid.ts");\nconst playerManager_1 = __webpack_require__(/*! ./playerManager */ "./src/game/main/playerManager.ts");\nconst trackingCamera_1 = __webpack_require__(/*! ./trackingCamera */ "./src/game/main/trackingCamera.ts");\nconst debug_1 = __webpack_require__(/*! ./debug */ "./src/game/main/debug.ts");\nconst fonts_1 = __webpack_require__(/*! ../basic/fonts */ "./src/game/basic/fonts.ts");\nconst uiManager_1 = __webpack_require__(/*! ../gui/uiManager */ "./src/game/gui/uiManager.ts");\nconst test_1 = __webpack_require__(/*! ./test */ "./src/game/main/test.ts");\nconst loader_1 = __webpack_require__(/*! ../assets/loader */ "./src/game/assets/loader.ts");\nclass Game {\n    get width() {\n        return this.app.view.width;\n    }\n    get height() {\n        return this.app.view.height;\n    }\n    constructor(app, engine) {\n        this.layers = {\n            background: new pixi_js_1.Container(),\n            surface: new pixi_js_1.Container(),\n            player: new pixi_js_1.Container(),\n            ui: new pixi_js_1.Container(),\n            debug: new pixi_js_1.Container()\n        };\n        this.lastWidth = -1;\n        this.lastHeight = -1;\n        this.app = app;\n        this.engine = engine;\n        this.app.stage.addChild(this.layers.background);\n        this.app.stage.addChild(this.layers.surface);\n        this.app.stage.addChild(this.layers.player);\n        this.app.stage.addChild(this.layers.ui);\n        this.app.stage.addChild(this.layers.debug);\n        this.loader = new loader_1.Loader(this);\n        this.fonts = new fonts_1.Fonts(this);\n        this.debug = new debug_1.Debug(this);\n        this.input = new inputManager_1.InputManager(this);\n        this.playerManager = new playerManager_1.PlayerManager(this);\n        this.camera = new trackingCamera_1.TrackingCamera(this, this.playerManager.agent);\n        this.gui = new uiManager_1.UIManager(this);\n        this.grid = new grid_1.Grid(this);\n        this.test = new test_1.Test(this);\n        this.app.ticker.add(this.update.bind(this));\n    }\n    start() {\n        this.app.ticker.start();\n        this.test.start();\n        this.gui.builder.start();\n    }\n    update(delta) {\n        if (this.lastWidth != this.width || this.lastHeight != this.height) {\n            this.resize();\n        }\n        this.lastWidth = this.width;\n        this.lastHeight = this.height;\n        this.debug.set("FPS", `${Math.round(this.app.ticker.FPS)}`);\n        this.debug.set("POS", `${Math.round(this.playerManager.agent.position.x)}, ${Math.round(this.playerManager.agent.position.y)}`);\n        this.debug.set("ROT", `${Math.round(this.playerManager.agent.rotation * 180 / Math.PI)}`);\n        this.debug.update(delta);\n        this.input.update(delta);\n        this.camera.update(delta);\n        this.grid.update(delta);\n        this.playerManager.update(delta);\n        this.gui.update(delta);\n        this.test.update(delta);\n        matter_js_1.Engine.update(this.engine, this.app.ticker.deltaMS, 1);\n        this.reset();\n    }\n    resize() {\n        this.gui.resize();\n        this.camera.resize();\n        this.grid.resize();\n    }\n    reset() {\n        this.input.reset();\n        this.debug.reset();\n    }\n}\nexports.Game = Game;\n\n\n//# sourceURL=webpack://squads/./src/game/main/game.ts?')},"./src/game/main/grid.ts":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.Grid = void 0;\nconst pixi_js_1 = __webpack_require__(/*! pixi.js */ "./node_modules/pixi.js/lib/index.js");\nclass Grid {\n    constructor(game) {\n        this.grid = [];\n        this.gap = 400;\n        this.container = new pixi_js_1.Container();\n        this.game = game;\n        this.game.layers.background.addChild(this.container);\n        this.generate();\n    }\n    generate() {\n        this.grid.forEach(line => line.destroy());\n        this.grid = [];\n        const gap = this.gap;\n        const { x: cx, y: cy } = this.game.camera.out(this.game.width / 2, this.game.height / 2);\n        const [mx, my] = [cx - cx % gap, cy - cy % gap];\n        const { x: tlx, y: tly } = this.game.camera.out(0, 0);\n        const { x: brx, y: bry } = this.game.camera.out(this.game.width, this.game.height);\n        const [tx, ty] = [Math.abs(brx - tlx) / 2, Math.abs(bry - tly) / 2];\n        for (let x = mx; x < mx + tx + gap; x += gap) {\n            const { x: dx } = this.game.camera.in(x, tly);\n            const line = new pixi_js_1.Graphics();\n            line.lineStyle({ color: new pixi_js_1.Color(0x095a6e), width: 2 }).moveTo(dx, 0).lineTo(dx, this.game.height);\n            this.container.addChild(line);\n            this.grid.push(line);\n        }\n        for (let x = mx - gap; x > mx - tx - gap; x -= gap) {\n            const { x: dx } = this.game.camera.in(x, tly);\n            const line = new pixi_js_1.Graphics();\n            line.lineStyle({ color: new pixi_js_1.Color(0x095a6e), width: 2 }).moveTo(dx, 0).lineTo(dx, this.game.height);\n            this.container.addChild(line);\n            this.grid.push(line);\n        }\n        for (let y = my; y < my + ty + gap; y += gap) {\n            const { y: dy } = this.game.camera.in(tlx, y);\n            const line = new pixi_js_1.Graphics();\n            line.lineStyle({ color: new pixi_js_1.Color(0x095a6e), width: 2 }).moveTo(0, dy).lineTo(this.game.width, dy);\n            this.container.addChild(line);\n            this.grid.push(line);\n        }\n        for (let y = my - gap; y > my - ty - gap; y -= gap) {\n            const { y: dy } = this.game.camera.in(tlx, y);\n            const line = new pixi_js_1.Graphics();\n            line.lineStyle({ color: new pixi_js_1.Color(0x095a6e), width: 2 }).moveTo(0, dy).lineTo(this.game.width, dy);\n            this.container.addChild(line);\n            this.grid.push(line);\n        }\n    }\n    update(delta) {\n        this.generate();\n    }\n    resize() {\n        this.generate();\n    }\n}\nexports.Grid = Grid;\n\n\n//# sourceURL=webpack://squads/./src/game/main/grid.ts?')},"./src/game/main/playerManager.ts":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PlayerManager = void 0;\nconst agent_1 = __webpack_require__(/*! ../basic/agent */ \"./src/game/basic/agent.ts\");\nclass PlayerManager {\n    constructor(game) {\n        this.cooldown = 0;\n        this.game = game;\n        this.agent = new agent_1.Agent(game);\n    }\n    update(delta) {\n        if (this.game.input.click && this.cooldown <= 0) {\n            this.agent.punch(Math.random() > 0.5 ? 'left' : 'right');\n            this.cooldown = 325;\n        }\n        this.cooldown = Math.max(0, this.cooldown - this.game.app.ticker.elapsedMS);\n        this.agent.update(delta);\n    }\n}\nexports.PlayerManager = PlayerManager;\n\n\n//# sourceURL=webpack://squads/./src/game/main/playerManager.ts?")},"./src/game/main/test.ts":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.Test = void 0;\nconst matter_js_1 = __webpack_require__(/*! matter-js */ "./node_modules/matter-js/build/matter.js");\nconst pixi_js_1 = __webpack_require__(/*! pixi.js */ "./node_modules/pixi.js/lib/index.js");\nconst gameObject_1 = __webpack_require__(/*! ../basic/gameObject */ "./src/game/basic/gameObject.ts");\nclass Test {\n    constructor(game) {\n        this.gameObjects = [];\n        this.game = game;\n    }\n    start() {\n        for (let i = 0; i < 1000; i++) {\n            const x = Math.random() * 10000 - 5000;\n            const y = Math.random() * 10000 - 5000;\n            const r = Math.random() * 100 + 5;\n            const body = matter_js_1.Bodies.circle(x, y, r, {\n                friction: 0,\n                frictionAir: 0,\n                frictionStatic: 0,\n                isStatic: true\n            });\n            const color = new pixi_js_1.Color(Math.random() * 0xffffff);\n            const obj = new gameObject_1.GameObject(this.game, body, {\n                layer: "surface",\n                cull: r * 2\n            });\n            this.game.gui.worldmap.register(x, y, new pixi_js_1.Graphics().beginFill(color).drawCircle(0, 0, r).endFill());\n            this.gameObjects.push(obj);\n            const graphic = new pixi_js_1.Graphics();\n            graphic.beginFill(color);\n            graphic.drawCircle(0, 0, r);\n            graphic.endFill();\n            obj.container.addChild(graphic);\n        }\n    }\n    update(delta) {\n        for (let obj of this.gameObjects) {\n            obj.update(delta);\n        }\n    }\n}\nexports.Test = Test;\n\n\n//# sourceURL=webpack://squads/./src/game/main/test.ts?')},"./src/game/main/trackingCamera.ts":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.TrackingCamera = void 0;\nconst pixi_js_1 = __webpack_require__(/*! pixi.js */ "./node_modules/pixi.js/lib/index.js");\nconst camera_1 = __webpack_require__(/*! ./camera */ "./src/game/main/camera.ts");\nclass TrackingCamera extends camera_1.Camera {\n    constructor(game, target) {\n        super(game);\n        this.target = target;\n    }\n    update(delta) {\n        const pos = this.target instanceof pixi_js_1.Point ? this.target : this.target.position;\n        this.position = {\n            x: pos.x,\n            y: pos.y\n        };\n        super.update(delta, { position: false, zoom: true });\n    }\n}\nexports.TrackingCamera = TrackingCamera;\n\n\n//# sourceURL=webpack://squads/./src/game/main/trackingCamera.ts?')},"./src/game/util/math.ts":(__unused_webpack_module,exports)=>{"use strict";eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.smoothstep = exports.angleTo = exports.angleBetween = exports.lerp = exports.clamp = exports.map = void 0;\nconst map = (value, min1, max1, min2, max2) => {\n    return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n};\nexports.map = map;\nconst clamp = (value, min, max) => {\n    return Math.min(Math.max(value, min), max);\n};\nexports.clamp = clamp;\nconst lerp = (a, b, t) => {\n    return a + (b - a) * t;\n};\nexports.lerp = lerp;\nconst angleBetween = (a, b) => {\n    return Math.min((2 * Math.PI) - Math.abs(a - b), Math.abs(a - b));\n};\nexports.angleBetween = angleBetween;\nconst angleTo = (current, target) => {\n    const sin = Math.sin(target - current);\n    return Math.abs(sin) / sin;\n};\nexports.angleTo = angleTo;\nconst smoothstep = (min, max, t) => {\n    const x = Math.max(0, Math.min(1, (t - min) / (max - min)));\n    ;\n    return x * x * (3 - 2 * x);\n};\nexports.smoothstep = smoothstep;\n\n\n//# sourceURL=webpack://squads/./src/game/util/math.ts?')},"?4f7e":()=>{eval("/* (ignored) */\n\n//# sourceURL=webpack://squads/./util.inspect_(ignored)?")}},__webpack_module_cache__={},deferred;function __webpack_require__(e){var n=__webpack_module_cache__[e];if(void 0!==n)return n.exports;var t=__webpack_module_cache__[e]={id:e,loaded:!1,exports:{}};return __webpack_modules__[e].call(t.exports,t,t.exports,__webpack_require__),t.loaded=!0,t.exports}__webpack_require__.m=__webpack_modules__,deferred=[],__webpack_require__.O=(e,n,t,i)=>{if(!n){var s=1/0;for(l=0;l<deferred.length;l++){for(var[n,t,i]=deferred[l],a=!0,r=0;r<n.length;r++)(!1&i||s>=i)&&Object.keys(__webpack_require__.O).every((e=>__webpack_require__.O[e](n[r])))?n.splice(r--,1):(a=!1,i<s&&(s=i));if(a){deferred.splice(l--,1);var o=t();void 0!==o&&(e=o)}}return e}i=i||0;for(var l=deferred.length;l>0&&deferred[l-1][2]>i;l--)deferred[l]=deferred[l-1];deferred[l]=[n,t,i]},__webpack_require__.d=(e,n)=>{for(var t in n)__webpack_require__.o(n,t)&&!__webpack_require__.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:n[t]})},__webpack_require__.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),__webpack_require__.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),__webpack_require__.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},__webpack_require__.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),(()=>{var e={main:0};__webpack_require__.O.j=n=>0===e[n];var n=(n,t)=>{var i,s,[a,r,o]=t,l=0;if(a.some((n=>0!==e[n]))){for(i in r)__webpack_require__.o(r,i)&&(__webpack_require__.m[i]=r[i]);if(o)var h=o(__webpack_require__)}for(n&&n(t);l<a.length;l++)s=a[l],__webpack_require__.o(e,s)&&e[s]&&e[s][0](),e[s]=0;return __webpack_require__.O(h)},t=self.webpackChunksquads=self.webpackChunksquads||[];t.forEach(n.bind(null,0)),t.push=n.bind(null,t.push.bind(t))})();var __webpack_exports__=__webpack_require__.O(void 0,["pixi","vendor","matter"],(()=>__webpack_require__("./src/game/entry.ts")));__webpack_exports__=__webpack_require__.O(__webpack_exports__)})();