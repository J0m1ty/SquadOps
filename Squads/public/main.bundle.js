(()=>{var __webpack_modules__={"./src/game/basic/agent.ts":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.Agent = void 0;\nconst matter_js_1 = __webpack_require__(/*! matter-js */ "./node_modules/matter-js/build/matter.js");\nconst gameObject_1 = __webpack_require__(/*! ./gameObject */ "./src/game/basic/gameObject.ts");\nconst pixi_js_1 = __webpack_require__(/*! pixi.js */ "./node_modules/pixi.js/lib/index.js");\nconst math_1 = __webpack_require__(/*! ../util/math */ "./src/game/util/math.ts");\nconst hand_1 = __webpack_require__(/*! ./hand */ "./src/game/basic/hand.ts");\nconst gun_1 = __webpack_require__(/*! ../equipables/gun */ "./src/game/equipables/gun.ts");\nconst melee_1 = __webpack_require__(/*! ../equipables/melee */ "./src/game/equipables/melee.ts");\nconst definitions_1 = __webpack_require__(/*! ../equipables/definitions */ "./src/game/equipables/definitions.ts");\nclass Agent extends gameObject_1.GameObject {\n    _rotation = 0;\n    rotation = 0;\n    rotationSpeed = 10 * (Math.PI / 180);\n    center = new pixi_js_1.Graphics();\n    handBox = new pixi_js_1.Container();\n    level = {\n        below: new pixi_js_1.Container(),\n        above: new pixi_js_1.Container()\n    };\n    holding = new pixi_js_1.Container();\n    hand;\n    equipped;\n    settled = false;\n    actions = [];\n    get size() {\n        return this.body.circleRadius ?? 0;\n    }\n    constructor(game) {\n        super(game, matter_js_1.Bodies.circle(0, 0, 50, {\n            friction: 0,\n            frictionAir: 0,\n            frictionStatic: 0\n        }), {\n            layer: "player"\n        });\n        this.info.trackBodyRotation = false;\n        this.center.beginFill(0xd5a98a);\n        this.center.drawCircle(0, 0, this.size);\n        this.center.endFill();\n        this.container.addChild(this.center);\n        this.handBox.addChild(this.level.below);\n        this.handBox.addChild(this.holding);\n        this.handBox.addChild(this.level.above);\n        this.container.addChild(this.handBox);\n        this.hand = {\n            left: new hand_1.Hand(this),\n            right: new hand_1.Hand(this)\n        };\n    }\n    equip = (item) => {\n        this.actions = [];\n        this.equipped?.reset();\n        this.settled = false;\n        this.equipped = (0, definitions_1.isGun)(item) ? new gun_1.GunInstance(this, item) : (0, definitions_1.isMelee)(item) ? new melee_1.MeleeInstance(this, item) : undefined;\n        if (!this.equipped)\n            return;\n        if (this.equipped instanceof gun_1.GunInstance) {\n            const sprite = this.equipped.getSprite(this.game);\n            if (this.equipped.info.type == "pistollike" && this.equipped.isDualPistol()) {\n                const dual = this.equipped.getDualSprite(this.game);\n                if (dual) {\n                    this.hand.left.holding[this.equipped.info.idle.left?.vertical ?? "above"].addChild(dual);\n                    this.hand.right.holding[this.equipped.info.idle.right?.vertical ?? "above"].addChild(sprite);\n                }\n            }\n            else {\n                this.holding.addChild(sprite);\n            }\n        }\n        else if (this.equipped instanceof melee_1.MeleeInstance) {\n            const sprite = this.equipped.getSprite(this.game);\n            if (sprite) {\n                if (this.equipped.info.type == "singlehanded" && "side" in this.equipped.info) {\n                    const side = this.equipped.info.side;\n                    this.hand[side].holding[this.equipped.info.idle[side]?.vertical ?? "above"].addChild(sprite);\n                }\n                else {\n                    this.holding.addChild(sprite);\n                }\n            }\n        }\n        this.hand.left.container.removeFromParent();\n        this.level[this.equipped.info.idle.left?.vertical ?? "above"].addChild(this.hand.left.container);\n        this.hand.left.container.visible = this.equipped.info.idle.left != null;\n        this.hand.right.container.removeFromParent();\n        this.level[this.equipped.info.idle.right?.vertical ?? "above"].addChild(this.hand.right.container);\n        this.hand.right.container.visible = this.equipped.info.idle.right != null;\n    };\n    update(delta) {\n        this._rotation = (0, math_1.mod)(this._rotation + Math.min((0, math_1.angleBetween)(this._rotation, this.rotation), this.rotationSpeed * delta) * (0, math_1.angleTo)(this._rotation, this.rotation), 2 * Math.PI);\n        if (Math.abs((0, math_1.angleBetween)(this._rotation, this.rotation)) < 0.01)\n            this._rotation = this.rotation;\n        this.container.rotation = this._rotation;\n        const update = this.actions.reduce((acc, action) => {\n            const update = action.animate(this.game.app.ticker.lastTime);\n            return {\n                left: acc.left || update.left,\n                right: acc.right || update.right,\n                holding: acc.holding || update.holding\n            };\n        }, { left: false, right: false, holding: false });\n        this.actions = this.actions.filter(action => action.animations.length > 0);\n        if (!update.left) {\n            this.hand.left.container.position = (0, math_1.lerpXY)(this.hand.left.container.position, this.equipped?.info.idle.left?.position ?? { x: 0, y: 0 }, 1 - Math.pow(0.5, delta / 1.5));\n            this.hand.left.container.pivot.set(0, 0);\n            this.hand.left.container.rotation = 0;\n        }\n        if (!update.right) {\n            this.hand.right.container.position = (0, math_1.lerpXY)(this.hand.right.container.position, this.equipped?.info.idle.right?.position ?? { x: 0, y: 0 }, 1 - Math.pow(0.5, delta / 1.5));\n            this.hand.right.container.pivot.set(0, 0);\n            this.hand.right.container.rotation = 0;\n        }\n        if (!update.holding) {\n            this.handBox.position.x = (0, math_1.lerp)(this.handBox.position.x, 0, 1 - Math.pow(0.5, delta / 1.5));\n            this.handBox.position.y = (0, math_1.lerp)(this.handBox.position.y, 0, 1 - Math.pow(0.5, delta / 1.5));\n            this.handBox.rotation = 0;\n        }\n        // Make sure the agent\'s hands are settled before allowing actions\n        if ((0, math_1.equalsXY)(this.hand.left.container.position, this.equipped?.info.idle.left?.position ?? { x: 0, y: 0 }, 0.1) && (0, math_1.equalsXY)(this.hand.right.container.position, this.equipped?.info.idle.right?.position ?? { x: 0, y: 0 }, 0.1) && (0, math_1.equalsXY)(this.handBox.position, { x: 0, y: 0 }, 0.1)) {\n            this.settled = true;\n        }\n        super.update(delta);\n    }\n}\nexports.Agent = Agent;\n\n\n//# sourceURL=webpack://squads/./src/game/basic/agent.ts?')},"./src/game/basic/assets.ts":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AssetList = exports.Assets = void 0;\nconst pixi_js_1 = __webpack_require__(/*! pixi.js */ \"./node_modules/pixi.js/lib/index.js\");\nexports.Assets = {\n    gun_long: {\n        name: 'gun_long',\n        generator: async () => {\n            const graphic = new pixi_js_1.Graphics();\n            graphic.lineStyle({ width: 3, color: 0x4b4b4b, alignment: 0.5 });\n            graphic.beginFill(0xfdfdfd);\n            graphic.drawRoundedRect(0, 0, 18, 122, 30);\n            graphic.endFill();\n            return graphic;\n        }\n    },\n    gun_short: {\n        name: 'gun_short',\n        generator: async () => {\n            const gun = new pixi_js_1.Graphics();\n            gun.lineStyle({ width: 3, color: 0x4b4b4b, alignment: 0.5 });\n            gun.beginFill(0xfdfdfd);\n            gun.drawRoundedRect(0, 0, 16, 85, 30);\n            gun.endFill();\n            return gun;\n        }\n    },\n    m9: {\n        name: 'm9',\n        generator: async () => {\n            const gun = new pixi_js_1.Graphics();\n            gun.lineStyle({ width: 3, color: 0x4b4b4b, alignment: 0.5 });\n            gun.beginFill(0xfdfdfd);\n            gun.drawRoundedRect(0, 0, 14, 52, 30);\n            gun.endFill();\n            return gun;\n        }\n    },\n    karambit: {\n        name: 'karambit',\n        generator: async () => {\n            const handle = new pixi_js_1.Graphics();\n            handle.lineStyle({ width: 3, color: 0x000000, alignment: 0.5 });\n            handle.beginFill(0x5A5C5E);\n            handle.drawRoundedRect(0, 0, 18, 45, 10);\n            handle.endFill();\n            const blade = new pixi_js_1.Graphics();\n            blade.lineStyle({ width: 3, color: 0x000000, alignment: 0.5 });\n            blade.beginFill(0xc0c0c0);\n            blade.drawRoundedRect(0, 0, 18, 45, 10);\n            blade.endFill();\n            blade.rotation = -Math.PI / 4;\n            blade.position.set(0, 45);\n            handle.addChild(blade);\n            return handle;\n        }\n    },\n    bayonet: {\n        name: 'bayonet',\n        generator: async () => {\n            const handle = new pixi_js_1.Graphics();\n            handle.lineStyle({ width: 3, color: 0x000000, alignment: 0.5 });\n            handle.beginFill(0x8B6C5C);\n            handle.drawRoundedRect(0, 0, 45, 16, 10);\n            handle.endFill();\n            const blade = new pixi_js_1.Graphics();\n            blade.lineStyle({ width: 3, color: 0x000000, alignment: 0.5 });\n            blade.beginFill(0xc0c0c0);\n            blade.moveTo(0, -1);\n            blade.lineTo(40, 3);\n            blade.lineTo(52, 8);\n            blade.lineTo(40, 13);\n            blade.lineTo(0, 17);\n            blade.closePath();\n            blade.endFill();\n            blade.position.set(45, 0);\n            handle.addChild(blade);\n            const hilt = new pixi_js_1.Graphics();\n            hilt.lineStyle({ width: 3, color: 0x000000, alignment: 0.5 });\n            hilt.beginFill(0x5A5C5E);\n            hilt.drawRoundedRect(0, 0, 10, 30, 10);\n            hilt.endFill();\n            hilt.position.set(42, -6);\n            handle.addChild(hilt);\n            return handle;\n        }\n    },\n    sledgehammer: {\n        name: 'sledgehammer',\n        generator: async () => {\n            const handle = new pixi_js_1.Graphics();\n            handle.lineStyle({ width: 3, color: 0x000000, alignment: 0.5 });\n            handle.beginFill(0xB78130);\n            handle.drawRoundedRect(0, 0, 16, 132, 5);\n            handle.endFill();\n            const head = new pixi_js_1.Graphics();\n            head.lineStyle({ width: 3, color: 0x000000, alignment: 0.5 });\n            head.beginFill(0x5A5C5E);\n            head.drawRect(0, 0, 50, 25);\n            head.endFill();\n            head.position.set(-16, 132);\n            handle.addChild(head);\n            return handle;\n        }\n    }\n};\nexports.AssetList = Object.values(exports.Assets);\n\n\n//# sourceURL=webpack://squads/./src/game/basic/assets.ts?")},"./src/game/basic/fonts.ts":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.Fonts = void 0;\nconst pixi_js_1 = __webpack_require__(/*! pixi.js */ "./node_modules/pixi.js/lib/index.js");\nclass Fonts {\n    game;\n    constructor(game) {\n        this.game = game;\n        pixi_js_1.BitmapFont.from("DebugFont", {\n            fill: 0xffffff,\n            fontSize: 12,\n            fontFamily: "monospace",\n        }, {\n            chars: "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789.,!?-+/():;%&`\'*#=[]\\" ",\n        });\n    }\n}\nexports.Fonts = Fonts;\n\n\n//# sourceURL=webpack://squads/./src/game/basic/fonts.ts?')},"./src/game/basic/gameObject.ts":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.GameObject = void 0;\nconst display_1 = __webpack_require__(/*! @pixi/display */ "./node_modules/@pixi/display/lib/index.js");\nconst matter_js_1 = __webpack_require__(/*! matter-js */ "./node_modules/matter-js/build/matter.js");\nconst pixi_js_1 = __webpack_require__(/*! pixi.js */ "./node_modules/pixi.js/lib/index.js");\nclass GameObject {\n    game;\n    body;\n    container = new display_1.Container();\n    info = {\n        trackBodyRotation: true\n    };\n    get position() {\n        return this.body.position;\n    }\n    constructor(game, body, options) {\n        this.game = game;\n        this.body = body;\n        matter_js_1.Composite.add(this.game.engine.world, this.body);\n        this.game.layers[options.layer].addChild(this.container);\n        if (options.cull) {\n            if (options.cull == "auto") {\n                this.container.cullable = true;\n            }\n            else {\n                this.info.cull = options.cull;\n            }\n        }\n    }\n    update(delta) {\n        const pos = this.game.camera.in(new pixi_js_1.Point(this.position.x, this.position.y));\n        if (this.info.cull) {\n            this.container.visible = this.container.renderable = this.game.camera.cull(pos, this.info.cull);\n        }\n        this.container.position.set(pos.x, pos.y);\n        this.container.scale.set(this.game.camera.scale);\n        if (this.info.trackBodyRotation) {\n            this.container.rotation = this.body.angle;\n        }\n    }\n}\nexports.GameObject = GameObject;\n\n\n//# sourceURL=webpack://squads/./src/game/basic/gameObject.ts?')},"./src/game/basic/hand.ts":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.Hand = void 0;\nconst pixi_js_1 = __webpack_require__(/*! pixi.js */ "./node_modules/pixi.js/lib/index.js");\nclass Hand {\n    agent;\n    container = new pixi_js_1.Container();\n    holding = {\n        below: new pixi_js_1.Container(),\n        above: new pixi_js_1.Container()\n    };\n    hand = new pixi_js_1.Graphics();\n    constructor(agent) {\n        this.agent = agent;\n        this.hand.lineStyle({ width: 3, color: 0x000000, alignment: 0.5 });\n        this.hand.beginFill(0xd5a98a);\n        this.hand.drawCircle(0, 0, this.agent.size * 6 / 19);\n        this.hand.endFill();\n        this.container.addChild(this.holding.below);\n        this.container.addChild(this.hand);\n        this.container.addChild(this.holding.above);\n    }\n}\nexports.Hand = Hand;\n\n\n//# sourceURL=webpack://squads/./src/game/basic/hand.ts?')},"./src/game/core/app.ts":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.app = void 0;\nconst pixi_js_1 = __webpack_require__(/*! pixi.js */ "./node_modules/pixi.js/lib/index.js");\nexports.app = new pixi_js_1.Application({\n    backgroundColor: 0x1099bb,\n    antialias: true,\n    autoStart: false,\n    resizeTo: window\n});\n\n\n//# sourceURL=webpack://squads/./src/game/core/app.ts?')},"./src/game/core/engine.ts":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.engine = void 0;\nconst matter_js_1 = __webpack_require__(/*! matter-js */ "./node_modules/matter-js/build/matter.js");\nexports.engine = matter_js_1.Engine.create({\n    gravity: {\n        scale: 0\n    }\n});\n\n\n//# sourceURL=webpack://squads/./src/game/core/engine.ts?')},"./src/game/entry.ts":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst app_1 = __webpack_require__(/*! ./core/app */ \"./src/game/core/app.ts\");\nconst engine_1 = __webpack_require__(/*! ./core/engine */ \"./src/game/core/engine.ts\");\nconst game_1 = __webpack_require__(/*! ./main/game */ \"./src/game/main/game.ts\");\nconst assets_1 = __webpack_require__(/*! ./basic/assets */ \"./src/game/basic/assets.ts\");\n(() => {\n    const entry = document.getElementById('entry');\n    const load = document.getElementById('load');\n    const progress = document.getElementById('progress');\n    const progressText = document.getElementById('progress-text');\n    if (!entry || !load || !progress || !progressText) {\n        throw new Error(`Missing entry elements!`);\n    }\n    app_1.app.resizeTo = entry.parentElement;\n    entry.appendChild(app_1.app.view);\n    const game = new game_1.Game(app_1.app, engine_1.engine, {\n        load: assets_1.AssetList,\n        onUpdate: (update) => {\n            progressText.innerText = update;\n        },\n        onProgress: (value) => {\n            progress.style.width = `${value * 100}%`;\n        },\n        onComplete: () => {\n            load.style.display = 'none';\n            game.start();\n        }\n    });\n})();\n\n\n//# sourceURL=webpack://squads/./src/game/entry.ts?")},"./src/game/equipables/action.ts":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.ActionInstance = void 0;\nconst animation_1 = __webpack_require__(/*! ./animation */ "./src/game/equipables/animation.ts");\nconst definitions_1 = __webpack_require__(/*! ./definitions */ "./src/game/equipables/definitions.ts");\nclass ActionInstance {\n    agent;\n    info;\n    animations = [];\n    constructor(agent, info, start) {\n        this.agent = agent;\n        this.info = (0, definitions_1.cloneAction)(info);\n        if (info.animation instanceof definitions_1.DualAnimation) {\n            for (const animation of info.animation) {\n                if (!animation)\n                    continue;\n                this.animations.push(new animation_1.AnimationInstance(animation, start));\n            }\n        }\n        else {\n            this.animations.push(new animation_1.AnimationInstance(info.animation, start));\n        }\n    }\n    animate = (time) => {\n        const update = { left: false, right: false, holding: false };\n        for (const animation of this.animations) {\n            const elapsed = time - animation.start;\n            const destroy = elapsed > animation.info.duration, end = !animation.info.next && destroy;\n            const origin = "side" in animation.info ? (this.agent.equipped?.info.idle[animation.info.side]?.position ?? { x: 0, y: 0 }) : { x: 0, y: 0 };\n            const { x, y, r } = animation.info.curve(animation.info.easing(elapsed / animation.info.duration), origin);\n            if ((0, definitions_1.isHandAnimation)(animation.info)) {\n                update[animation.info.side] = true;\n                if (animation.info.pivot == "body" && !end) {\n                    this.agent.hand[animation.info.side].container.position.set(x - origin.x, y - origin.y);\n                    this.agent.hand[animation.info.side].container.pivot.set(-origin.x, -origin.y);\n                }\n                else {\n                    this.agent.hand[animation.info.side].container.position.set(x, y);\n                    this.agent.hand[animation.info.side].container.pivot.set(0, 0);\n                }\n                if (!end)\n                    this.agent.hand[animation.info.side].container.rotation = r ?? 0;\n            }\n            else {\n                update.left = update.right = update.holding = true;\n                this.agent.handBox.position.set(x, y);\n                this.agent.handBox.rotation = r ?? 0;\n            }\n            if (destroy && animation.info.next != null) {\n                animation.info = animation.info.next;\n                animation.start = time;\n            }\n            if (end) {\n                this.animations.splice(this.animations.indexOf(animation), 1);\n            }\n        }\n        return update;\n    };\n}\nexports.ActionInstance = ActionInstance;\n\n\n//# sourceURL=webpack://squads/./src/game/equipables/action.ts?')},"./src/game/equipables/animation.ts":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.AnimationInstance = void 0;\nconst definitions_1 = __webpack_require__(/*! ./definitions */ "./src/game/equipables/definitions.ts");\nclass AnimationInstance {\n    info;\n    start;\n    constructor(info, start) {\n        this.info = "side" in info ? (0, definitions_1.cloneHandAnimation)(info) : (0, definitions_1.cloneAnimation)(info);\n        this.start = start;\n    }\n}\nexports.AnimationInstance = AnimationInstance;\n\n\n//# sourceURL=webpack://squads/./src/game/equipables/animation.ts?')},"./src/game/equipables/definitions.ts":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.melees = exports.actions = exports.guns = exports.cloneMelee = exports.cloneGun = exports.cloneAction = exports.cloneHandAnimation = exports.cloneAnimation = exports.isHandAnimation = exports.isMelee = exports.isGun = exports.DualAnimation = void 0;\nconst curves_1 = __webpack_require__(/*! ../util/curves */ "./src/game/util/curves.ts");\nconst math_1 = __webpack_require__(/*! ../util/math */ "./src/game/util/math.ts");\nclass DualAnimation {\n    left;\n    right;\n    constructor(left, right) {\n        this.left = left;\n        this.right = right;\n    }\n    *[Symbol.iterator]() {\n        yield this.left;\n        yield this.right;\n    }\n}\nexports.DualAnimation = DualAnimation;\n// DATA VERIFICATION\nconst isGun = (equippable) => {\n    return \'classification\' in equippable;\n};\nexports.isGun = isGun;\nconst isMelee = (equippable) => {\n    return \'actions\' in equippable;\n};\nexports.isMelee = isMelee;\nconst isHandAnimation = (animation) => {\n    return \'pivot\' in animation;\n};\nexports.isHandAnimation = isHandAnimation;\n// FACTORIES\nconst cloneAnimation = (source) => {\n    const clone = {\n        duration: source.duration,\n        easing: source.easing,\n        curve: source.curve,\n        ...(source.next ? {\n            next: (0, exports.cloneAnimation)(source.next)\n        } : {})\n    };\n    return clone;\n};\nexports.cloneAnimation = cloneAnimation;\nconst cloneHandAnimation = (source) => {\n    const clone = {\n        duration: source.duration,\n        easing: source.easing,\n        curve: source.curve,\n        pivot: source.pivot,\n        side: source.side,\n        ...(source.next ? {\n            next: (0, exports.cloneHandAnimation)(source.next)\n        } : {})\n    };\n    return clone;\n};\nexports.cloneHandAnimation = cloneHandAnimation;\nconst cloneAction = (source) => {\n    const clone = {\n        name: source.name,\n        type: source.type,\n        data: { ...source.data },\n        ...(source.animation instanceof DualAnimation ? {\n            animation: new DualAnimation(source.animation.left ? (0, exports.cloneHandAnimation)(source.animation.left) : null, source.animation.right ? (0, exports.cloneHandAnimation)(source.animation.right) : null)\n        } : {\n            animation: (0, exports.cloneAnimation)(source.animation)\n        })\n    };\n    return clone;\n};\nexports.cloneAction = cloneAction;\nconst cloneGun = (source) => {\n    const clone = {\n        name: source.name,\n        type: source.type,\n        classification: source.classification,\n        idle: {\n            left: {\n                vertical: source.idle.left.vertical,\n                position: { ...source.idle.left.position }\n            },\n            right: {\n                vertical: source.idle.right.vertical,\n                position: { ...source.idle.right.position }\n            }\n        },\n        asset: {\n            name: source.asset.name,\n            offset: { ...source.asset.offset },\n            rotation: source.asset.rotation,\n            anchor: { ...source.asset.anchor }\n        },\n        tint: source.tint,\n        recoil: { ...source.recoil },\n        fireMode: { ...source.fireMode },\n        ...("dualable" in source ? { dualable: source.dualable } : {})\n    };\n    return clone;\n};\nexports.cloneGun = cloneGun;\nconst cloneMelee = (source) => {\n    const clone = {\n        name: source.name,\n        type: source.type,\n        idle: {\n            left: {\n                vertical: source.idle.left.vertical,\n                position: { ...source.idle.left.position }\n            },\n            right: {\n                vertical: source.idle.right.vertical,\n                position: { ...source.idle.right.position }\n            }\n        },\n        actions: new Set(source.actions),\n        ...("asset" in source ? { asset: source.asset } : {}),\n        ...("side" in source ? { side: source.side } : {})\n    };\n    return clone;\n};\nexports.cloneMelee = cloneMelee;\n// DATA\nexports.guns = {\n    pistollike: {\n        m9: {\n            name: "m9",\n            type: "pistollike",\n            classification: "pistol",\n            asset: {\n                name: "m9",\n                offset: { x: 45, y: 0 },\n                rotation: -Math.PI / 2,\n                anchor: { x: 0.5, y: 0 }\n            },\n            idle: {\n                left: {\n                    vertical: "above",\n                    position: { x: 45, y: 0 }\n                },\n                right: {\n                    vertical: "above",\n                    position: { x: 45, y: 0 }\n                }\n            },\n            tint: 0x222222,\n            recoil: { x: 10, y: 1 },\n            fireMode: { type: "semi", cooldown: 150 },\n            dualable: true\n        },\n    },\n    riflelike: {\n        ak47: {\n            name: "ak47",\n            type: "riflelike",\n            classification: "rifle",\n            asset: {\n                name: "gun_long",\n                offset: { x: 45, y: 0 },\n                rotation: -Math.PI / 2,\n                anchor: { x: 0.5, y: 0 }\n            },\n            idle: {\n                left: {\n                    vertical: "below",\n                    position: { x: 115, y: -3 }\n                },\n                right: {\n                    vertical: "above",\n                    position: { x: 45, y: 0 }\n                }\n            },\n            tint: 0x865232,\n            recoil: { x: 15, y: 2 },\n            fireMode: { type: "auto", cooldown: 160 }\n        }\n    }\n};\nexports.actions = {\n    single: {\n        punch_left: {\n            name: "punch_left",\n            type: "single",\n            data: {\n                cooldown: 325\n            },\n            animation: new DualAnimation(null, {\n                duration: 130,\n                pivot: "hand",\n                side: "right",\n                easing: curves_1.smoothstep,\n                curve: (t, { x, y }) => {\n                    return {\n                        x: (0, math_1.lerp)(x, x + 33, t),\n                        y: (0, math_1.lerp)(y, y - 20, t)\n                    };\n                },\n                next: {\n                    duration: 195,\n                    pivot: "hand",\n                    side: "right",\n                    easing: curves_1.smoothstep,\n                    curve: (t, { x, y }) => {\n                        return {\n                            x: (0, math_1.lerp)(x + 33, x, t),\n                            y: (0, math_1.lerp)(y - 20, y, t)\n                        };\n                    }\n                }\n            })\n        },\n        punch_right: {\n            name: "punch_right",\n            type: "single",\n            data: {\n                cooldown: 325\n            },\n            animation: new DualAnimation({\n                duration: 130,\n                pivot: "hand",\n                side: "left",\n                easing: curves_1.smoothstep,\n                curve: (t, { x, y }) => {\n                    return {\n                        x: (0, math_1.lerp)(x, x + 33, t),\n                        y: (0, math_1.lerp)(y, y + 20, t)\n                    };\n                },\n                next: {\n                    duration: 195,\n                    pivot: "hand",\n                    side: "left",\n                    easing: curves_1.smoothstep,\n                    curve: (t, { x, y }) => {\n                        return {\n                            x: (0, math_1.lerp)(x + 33, x, t),\n                            y: (0, math_1.lerp)(y + 20, y, t)\n                        };\n                    }\n                }\n            }, null)\n        },\n        slash: {\n            name: "slash",\n            type: "single",\n            data: {\n                cooldown: 325\n            },\n            animation: new DualAnimation(null, {\n                duration: 130,\n                pivot: "hand",\n                side: "right",\n                easing: curves_1.smoothstep,\n                curve: (t, { x, y }) => {\n                    return {\n                        x: (0, math_1.lerp)(x, x + 42, t),\n                        y: (0, math_1.lerp)(y, y - 20, t),\n                        r: (0, math_1.lerp)(0, -Math.PI / 2, t)\n                    };\n                },\n                next: {\n                    duration: 195,\n                    pivot: "hand",\n                    side: "right",\n                    easing: curves_1.smoothstep,\n                    curve: (t, { x, y }) => {\n                        return {\n                            x: (0, math_1.lerp)(x + 42, x, t),\n                            y: (0, math_1.lerp)(y - 20, y, t),\n                            r: (0, math_1.lerp)(-Math.PI / 2, 0, t)\n                        };\n                    }\n                }\n            })\n        },\n        cut: {\n            name: "cut",\n            type: "single",\n            data: {\n                cooldown: 325\n            },\n            animation: new DualAnimation(null, {\n                duration: 32,\n                pivot: "body",\n                side: "right",\n                easing: curves_1.smoothstep,\n                curve: (t, { x, y }) => {\n                    return {\n                        x: (0, math_1.lerp)(x, x + 10, t),\n                        y: (0, math_1.lerp)(y, y - 5, t),\n                        r: (0, math_1.lerp)(0, -Math.PI / 4, t)\n                    };\n                },\n                next: {\n                    duration: 146,\n                    pivot: "body",\n                    side: "right",\n                    easing: curves_1.smoothstep,\n                    curve: (t, { x, y }) => {\n                        return {\n                            x: (0, math_1.lerp)(x + 10, x - 10, t),\n                            y: (0, math_1.lerp)(y - 5, y + 10, t),\n                            r: (0, math_1.lerp)(-Math.PI / 4, Math.PI / 4, t)\n                        };\n                    },\n                    next: {\n                        duration: 178,\n                        pivot: "body",\n                        side: "right",\n                        easing: curves_1.smoothstep,\n                        curve: (t, { x, y }) => {\n                            return {\n                                x: (0, math_1.lerp)(x - 10, x, t),\n                                y: (0, math_1.lerp)(y + 10, y, t),\n                                r: (0, math_1.lerp)(Math.PI / 4, 0, t)\n                            };\n                        }\n                    }\n                }\n            })\n        },\n        thrust: {\n            name: "thrust",\n            type: "single",\n            data: {\n                cooldown: 325\n            },\n            animation: new DualAnimation(null, {\n                duration: 32,\n                pivot: "hand",\n                side: "right",\n                easing: curves_1.smoothstep,\n                curve: (t, { x, y }) => {\n                    return { x: (0, math_1.lerp)(x, x - 10, t), y };\n                },\n                next: {\n                    duration: 130,\n                    pivot: "hand",\n                    side: "right",\n                    easing: curves_1.smoothstep,\n                    curve: (t, { x, y }) => {\n                        return { x: (0, math_1.lerp)(x - 10, x + 37, t), y };\n                    },\n                    next: {\n                        duration: 162,\n                        pivot: "hand",\n                        side: "right",\n                        easing: curves_1.smoothstep,\n                        curve: (t, { x, y }) => {\n                            return { x: (0, math_1.lerp)(x + 37, x, t), y };\n                        }\n                    }\n                }\n            })\n        }\n    },\n    dual: {\n        heavy_swing: {\n            name: "heavy_swing",\n            type: "dual",\n            data: {\n                cooldown: 500\n            },\n            animation: {\n                duration: 100,\n                easing: curves_1.smoothstep,\n                curve: t => {\n                    return { x: 0, y: 0, r: (0, math_1.lerp)(0, Math.PI / 8, t) };\n                },\n                next: {\n                    duration: 200,\n                    easing: curves_1.smoothstep,\n                    curve: t => {\n                        return { x: 0, y: 0, r: (0, math_1.lerp)(Math.PI / 8, -Math.PI / 2, t) };\n                    },\n                    next: {\n                        duration: 180,\n                        easing: curves_1.smoothstep,\n                        curve: t => {\n                            return { x: 0, y: 0, r: (0, math_1.lerp)(-Math.PI / 2, 0, t) };\n                        }\n                    }\n                }\n            }\n        }\n    },\n};\nexports.melees = {\n    none: {\n        fists: {\n            name: "fists",\n            type: "none",\n            idle: {\n                left: {\n                    vertical: "above",\n                    position: { x: 33, y: -33 }\n                },\n                right: {\n                    vertical: "above",\n                    position: { x: 33, y: 33 }\n                }\n            },\n            actions: new Set(["punch_left", "punch_right"])\n        }\n    },\n    singlehanded: {\n        karambit: {\n            name: "karambit",\n            type: "singlehanded",\n            side: "right",\n            asset: {\n                name: "karambit",\n                offset: { x: 13, y: 15 },\n                rotation: 0,\n                anchor: { x: 0.5, y: 0.5 }\n            },\n            idle: {\n                left: {\n                    vertical: "above",\n                    position: { x: 33, y: -33 }\n                },\n                right: {\n                    vertical: "below",\n                    position: { x: 33, y: 33 }\n                }\n            },\n            actions: new Set(["punch_left", "punch_right", "slash"])\n        },\n        bayonet: {\n            name: "bayonet",\n            type: "singlehanded",\n            side: "right",\n            asset: {\n                name: "bayonet",\n                offset: { x: 25, y: -12 },\n                rotation: -Math.PI / 6,\n                anchor: { x: 0.5, y: 0.5 }\n            },\n            idle: {\n                left: {\n                    vertical: "above",\n                    position: { x: 33, y: -33 }\n                },\n                right: {\n                    vertical: "below",\n                    position: { x: 33, y: 33 }\n                }\n            },\n            actions: new Set(["cut", "thrust"])\n        }\n    },\n    twohanded: {\n        sledgehammer: {\n            name: "sledgehammer",\n            type: "twohanded",\n            asset: {\n                name: "sledgehammer",\n                offset: { x: 43, y: 15 },\n                rotation: -Math.PI / 16,\n                anchor: { x: 0.5, y: 0.5 }\n            },\n            idle: {\n                left: {\n                    vertical: "above",\n                    position: { x: 33, y: -33 }\n                },\n                right: {\n                    vertical: "above",\n                    position: { x: 45, y: 33 }\n                }\n            },\n            actions: new Set(["heavy_swing"])\n        }\n    }\n};\n\n\n//# sourceURL=webpack://squads/./src/game/equipables/definitions.ts?')},"./src/game/equipables/gun.ts":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.GunInstance = void 0;\nconst pixi_js_1 = __webpack_require__(/*! pixi.js */ "./node_modules/pixi.js/lib/index.js");\nconst definitions_1 = __webpack_require__(/*! ./definitions */ "./src/game/equipables/definitions.ts");\nconst math_1 = __webpack_require__(/*! ../util/math */ "./src/game/util/math.ts");\nclass GunInstance {\n    agent;\n    info;\n    cooldown = 0;\n    dual = false;\n    burst = { shots: 0, cooldown: 0 };\n    _sprite;\n    _dual;\n    constructor(agent, info) {\n        this.agent = agent;\n        this.info = (0, definitions_1.cloneGun)(info);\n    }\n    getSprite = (game) => {\n        if (!this._sprite) {\n            this._sprite = this.applyTransform(new pixi_js_1.Sprite(game.loader.getAsset(this.info.asset.name)));\n        }\n        return this._sprite;\n    };\n    isDualPistol = () => "dualable" in this.info && this.info.dualable && this.dual;\n    getDualSprite = (game) => {\n        if (this.info.type != "pistollike" || !this.isDualPistol())\n            return;\n        if (!this._dual) {\n            this._dual = this.applyTransform(new pixi_js_1.Sprite(game.loader.getAsset(this.info.asset.name)));\n        }\n        return this._dual;\n    };\n    applyTransform = (sprite) => {\n        sprite.anchor.set(this.info.asset.anchor.x, this.info.asset.anchor.y);\n        sprite.position.set(this.info.asset.offset.x, this.info.asset.offset.y);\n        sprite.rotation = this.info.asset.rotation;\n        sprite.tint = this.info.tint;\n        return sprite;\n    };\n    use() {\n        if (!this.agent.settled)\n            return;\n        const recoil = this.info.recoil;\n        if (this.info.type == "pistollike" && this.isDualPistol()) {\n            const x = (0, math_1.lerp)(0, -recoil.x, 0.5);\n            const y = (0, math_1.lerp)(0, recoil.y + (Math.round(Math.random()) * 2 - 1), 0.8);\n            const side = Math.round(Math.random()) == 0 ? "left" : "right";\n            const hand = this.info.idle[side].position;\n            this.agent.hand[side].container.position.set(hand.x + x, hand.y + y);\n        }\n        else {\n            const x = (0, math_1.lerp)(this.agent.handBox.position.x, -recoil.x, 0.5);\n            const y = (0, math_1.lerp)(this.agent.handBox.position.y, recoil.y + (Math.round(Math.random()) * 2 - 1), 0.8);\n            this.agent.handBox.position.set(x, y);\n        }\n    }\n    update() {\n        switch (this.info.fireMode.type) {\n            case "semi":\n            case "auto":\n                if ((this.info.fireMode.type == "auto" ? this.agent.game.input.down : this.agent.game.input.click) && this.cooldown <= 0) {\n                    this.use();\n                    this.cooldown = this.info.fireMode.cooldown;\n                }\n                break;\n            case "burst":\n                if ((this.info.fireMode.mode == "auto" ? this.agent.game.input.down : this.agent.game.input.click) && this.cooldown <= 0) {\n                    this.burst.shots = this.info.fireMode.shots;\n                    this.cooldown = this.info.fireMode.cooldown;\n                }\n                if (this.burst.shots > 0 && this.burst.cooldown <= 0) {\n                    this.use();\n                    this.burst.cooldown = this.info.fireMode.burstCooldown;\n                    this.burst.shots--;\n                }\n                break;\n        }\n        this.cooldown = Math.max(0, this.cooldown - this.agent.game.app.ticker.elapsedMS);\n        this.burst.cooldown = Math.max(0, this.burst.cooldown - this.agent.game.app.ticker.elapsedMS);\n    }\n    reset = () => {\n        this._sprite?.removeFromParent();\n        this._dual?.removeFromParent();\n    };\n}\nexports.GunInstance = GunInstance;\n\n\n//# sourceURL=webpack://squads/./src/game/equipables/gun.ts?')},"./src/game/equipables/melee.ts":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.MeleeInstance = void 0;\nconst pixi_js_1 = __webpack_require__(/*! pixi.js */ "./node_modules/pixi.js/lib/index.js");\nconst definitions_1 = __webpack_require__(/*! ./definitions */ "./src/game/equipables/definitions.ts");\nconst action_1 = __webpack_require__(/*! ./action */ "./src/game/equipables/action.ts");\nclass MeleeInstance {\n    agent;\n    info;\n    cooldown = 0;\n    _sprite;\n    constructor(agent, info) {\n        this.agent = agent;\n        this.info = (0, definitions_1.cloneMelee)(info);\n    }\n    use = () => {\n        if (!this.agent.settled)\n            return 0;\n        const name = Array.from(this.info.actions)[Math.floor(Math.random() * this.info.actions.size)];\n        const action = Object.values(definitions_1.actions).flatMap(actionType => Object.values(actionType)).find(action => action.name === name);\n        if (action == null)\n            return 0;\n        this.agent.actions.push(new action_1.ActionInstance(this.agent, action, this.agent.game.app.ticker.lastTime));\n        return action.data.cooldown;\n    };\n    getSprite = (game) => {\n        if (!("asset" in this.info))\n            return;\n        if (!this._sprite) {\n            this._sprite = this.applyTransform(new pixi_js_1.Sprite(game.loader.getAsset(this.info.asset.name)));\n        }\n        return this._sprite;\n    };\n    applyTransform = (sprite) => {\n        if (!("asset" in this.info))\n            return sprite;\n        sprite.anchor.set(this.info.asset.anchor.x, this.info.asset.anchor.y);\n        sprite.position.set(this.info.asset.offset.x, this.info.asset.offset.y);\n        sprite.rotation = this.info.asset.rotation;\n        return sprite;\n    };\n    update() {\n        if (this.agent.game.input.click && this.cooldown <= 0) {\n            this.cooldown = this.use();\n        }\n        this.cooldown = Math.max(0, this.cooldown - this.agent.game.app.ticker.elapsedMS);\n    }\n    reset() {\n        this._sprite?.removeFromParent();\n    }\n}\nexports.MeleeInstance = MeleeInstance;\n\n\n//# sourceURL=webpack://squads/./src/game/equipables/melee.ts?')},"./src/game/gui/uiBuilder.ts":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.UIBuilder = void 0;\nconst pixi_js_1 = __webpack_require__(/*! pixi.js */ "./node_modules/pixi.js/lib/index.js");\nconst uiComponent_1 = __webpack_require__(/*! ./uiComponent */ "./src/game/gui/uiComponent.ts");\nconst math_1 = __webpack_require__(/*! ../util/math */ "./src/game/util/math.ts");\nclass UIBuilder {\n    manager;\n    elements = {};\n    minimap = new pixi_js_1.Sprite();\n    worldmap = new pixi_js_1.Sprite();\n    player = new pixi_js_1.Graphics();\n    viewport = new pixi_js_1.Graphics();\n    debug;\n    constructor(manager) {\n        this.manager = manager;\n        this.debug = new pixi_js_1.BitmapText("", {\n            fontName: "DebugFont",\n            align: "left",\n        });\n    }\n    generateMapTexture = () => {\n        const generator = new uiComponent_1.UIComponent(this.manager, undefined, {\n            size: (w, h) => {\n                const s = Math.min(w, h);\n                return { w: s, h: s };\n            },\n            anchor: { w: 0.5, h: 0.5 },\n            self: { w: 0.5, h: 0.5 },\n        });\n        const size = 1024;\n        const background = new pixi_js_1.Graphics();\n        background.beginFill(0x000000, 0.1);\n        background.drawRect(0, 0, size, size);\n        background.endFill();\n        generator.container.addChild(background);\n        const mask = new pixi_js_1.Graphics();\n        mask.beginFill(0xffffff);\n        mask.drawRect(0, 0, size, size);\n        mask.endFill();\n        generator.container.addChild(mask);\n        const container = new pixi_js_1.Container();\n        container.mask = mask;\n        generator.container.addChild(container);\n        for (let blip of this.manager.worldmap.blips) {\n            let gx = (0, math_1.map)(blip.x, -this.manager.worldmap.range / 2, this.manager.worldmap.range / 2, 0, generator.width);\n            let gy = (0, math_1.map)(blip.y, -this.manager.worldmap.range / 2, this.manager.worldmap.range / 2, 0, generator.height);\n            blip.graphic.position.set(gx, gy);\n            blip.graphic.scale.set(size / this.manager.worldmap.range);\n            container.addChild(blip.graphic);\n        }\n        const texture = this.manager.game.app.renderer.generateTexture(generator.container);\n        generator.destroy();\n        this.manager.worldmap.blips = [];\n        return texture;\n    };\n    start() {\n        const texture = this.generateMapTexture();\n        (() => {\n            this.elements.minimapContainer = new uiComponent_1.UIComponent(this.manager, null, {\n                size: { w: 200, h: 200 },\n                anchor: { w: 0, h: 0 },\n                offset: { x: 20, y: 20 },\n            });\n            const size = 200;\n            const background = new pixi_js_1.Graphics();\n            background.beginFill(0x000000, 0.33);\n            background.drawRoundedRect(0, 0, size, size, 10);\n            background.endFill();\n            this.elements.minimapContainer.container.addChild(background);\n            const fill = new pixi_js_1.Graphics();\n            fill.beginFill(0x04232b);\n            fill.drawRect(10, 10, size - 20, size - 20);\n            fill.endFill();\n            this.elements.minimapContainer.container.addChild(fill);\n            const mask = new pixi_js_1.Graphics();\n            mask.beginFill(0xffffff);\n            mask.drawRect(10, 10, size - 20, size - 20);\n            mask.endFill();\n            this.elements.minimapContainer.container.addChild(mask);\n            const container = new pixi_js_1.Container();\n            container.mask = mask;\n            this.elements.minimapContainer.container.addChild(container);\n            this.elements.minimap = new uiComponent_1.UIComponent(this.manager, container, {\n                size: { w: size - 20, h: size - 20 },\n                anchor: { w: 0.5, h: 0.5 },\n                self: { w: 0.5, h: 0.5 },\n            });\n            this.minimap.texture = texture.clone();\n            this.minimap.anchor.set(0.5);\n            this.minimap.position.set(size / 2, size / 2);\n            this.minimap.width = this.minimap.height = size - 20;\n            this.minimap.scale = this.minimap.scale.multiplyScalar(this.manager.game.input.maxZoom);\n            this.elements.minimap.container.addChild(this.minimap);\n            const center = new pixi_js_1.Graphics();\n            center.beginFill(0xffffff);\n            center.drawCircle(0, 0, this.manager.game.playerManager.agent.size * (size / this.manager.worldmap.range) * 2);\n            center.endFill();\n            center.position.set(size / 2, size / 2);\n            this.elements.minimap.container.addChild(center);\n        })();\n        (() => {\n            this.elements.debug = new uiComponent_1.UIComponent(this.manager, null, {\n                size: { w: 150, h: 50 },\n                anchor: { w: 0, h: 1 },\n                offset: { x: 20, y: -70 },\n            });\n            const background = new pixi_js_1.Graphics();\n            background.beginFill(0x000000, 0.33);\n            background.drawRoundedRect(0, 0, 150, 50, 10);\n            background.endFill();\n            this.elements.debug.container.addChild(background);\n            this.debug.position.set(10, 8);\n            this.elements.debug.container.addChild(this.debug);\n        })();\n        (() => {\n            this.elements.worldmapContainer = new uiComponent_1.UIComponent(this.manager, null, {\n                size: (w, h) => {\n                    const s = Math.min(w, h) * 0.75;\n                    return { w: s, h: s };\n                },\n                anchor: { w: 0.5, h: 0.5 },\n                self: { w: 0.5, h: 0.5 },\n            });\n            const size = 500;\n            const background = new pixi_js_1.Graphics();\n            background.beginFill(0x000000, 0.33);\n            background.drawRoundedRect(0, 0, size, size, 10);\n            background.endFill();\n            this.elements.worldmapContainer.container.addChild(background);\n            const fill = new pixi_js_1.Graphics();\n            fill.beginFill(0x04232b);\n            fill.drawRect(10, 10, size - 20, size - 20);\n            fill.endFill();\n            this.elements.worldmapContainer.container.addChild(fill);\n            const mask = new pixi_js_1.Graphics();\n            mask.beginFill(0xffffff);\n            mask.drawRect(10, 10, size - 20, size - 20);\n            mask.endFill();\n            this.elements.worldmapContainer.container.addChild(mask);\n            const container = new pixi_js_1.Container();\n            container.mask = mask;\n            this.elements.worldmapContainer.container.addChild(container);\n            this.elements.worldmap = new uiComponent_1.UIComponent(this.manager, container, {\n                size: { w: size - 20, h: size - 20 },\n                anchor: { w: 0.5, h: 0.5 },\n                self: { w: 0.5, h: 0.5 },\n            });\n            this.worldmap.texture = texture.clone();\n            this.worldmap.anchor.set(0.5);\n            this.worldmap.position.set(size / 2, size / 2);\n            this.worldmap.width = this.worldmap.height = size - 20;\n            container.addChild(this.worldmap);\n            this.player.beginFill(0xd5a98a);\n            this.player.drawCircle(0, 0, this.manager.game.playerManager.agent.size * (size / this.manager.worldmap.range));\n            this.player.endFill();\n            this.player.position.set(size / 2, size / 2);\n            container.addChild(this.player);\n            container.addChild(this.viewport);\n        })();\n        texture.destroy();\n        this.manager.worldmap.setVisibility(false);\n    }\n}\nexports.UIBuilder = UIBuilder;\n\n\n//# sourceURL=webpack://squads/./src/game/gui/uiBuilder.ts?')},"./src/game/gui/uiComponent.ts":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.UIComponent = void 0;\nconst pixi_js_1 = __webpack_require__(/*! pixi.js */ \"./node_modules/pixi.js/lib/index.js\");\nclass UIComponent {\n    manager;\n    parent;\n    children = [];\n    container = new pixi_js_1.Container();\n    size = 'static';\n    relativeTo = 'parent';\n    position = 'relative';\n    anchor = { w: 0, h: 0 };\n    offset = { x: 0, y: 0 };\n    self = { w: 0, h: 0 };\n    get width() {\n        return this.container.width;\n    }\n    get height() {\n        return this.container.height;\n    }\n    get globalWidth() {\n        return this.manager.game.width;\n    }\n    get globalHeight() {\n        return this.manager.game.height;\n    }\n    get parentWidth() {\n        return this.parent?.width ?? this.globalWidth;\n    }\n    get parentHeight() {\n        return this.parent?.height ?? this.globalHeight;\n    }\n    get relativeWidth() {\n        return this.relativeTo === 'parent' ? this.parentWidth : this.globalWidth;\n    }\n    get relativeHeight() {\n        return this.relativeTo === 'parent' ? this.parentHeight : this.globalHeight;\n    }\n    constructor(manager, parent, options = {}) {\n        this.manager = manager;\n        this.parent = parent;\n        this.size = options.size ?? this.size;\n        this.relativeTo = options.relativeTo ?? this.relativeTo;\n        this.position = options.position ? (options.position === 'relative' ? 'relative' : 'static') : this.position;\n        this.anchor = options.anchor ?? this.anchor;\n        this.offset = options.offset ?? this.offset;\n        this.self = options.self ?? this.self;\n        if (options.position != 'relative') {\n            this.container.position.set(options.position?.x ?? 0, options.position?.y ?? 0);\n        }\n        if (parent instanceof pixi_js_1.Container) {\n            parent.addChild(this.container);\n        }\n        else if (parent instanceof UIComponent) {\n            parent.children.push(this);\n        }\n        else if (parent === null) {\n            this.manager.game.layers.ui.addChild(this.container);\n            manager.children.push(this);\n        }\n    }\n    resize() {\n        if (typeof this.size === 'function') {\n            const { w, h } = this.size(this.relativeWidth, this.relativeHeight);\n            this.container.width = w;\n            this.container.height = h;\n        }\n        else if (this.size != 'static') {\n            this.container.width = typeof this.size.w === 'number' ? this.size.w : this.relativeWidth * (parseInt(this.size.w) / 100);\n            this.container.height = typeof this.size.h === 'number' ? this.size.h : this.relativeHeight * (parseInt(this.size.h) / 100);\n        }\n        if (this.position === 'relative') {\n            this.container.x = this.relativeWidth * this.anchor.w + this.offset.x - this.container.width * this.self.w;\n            this.container.y = this.relativeHeight * this.anchor.h + this.offset.y - this.container.height * this.self.h;\n        }\n        for (const child of this.children) {\n            child.resize();\n        }\n    }\n    destroy() {\n        if (this.parent instanceof UIComponent) {\n            this.parent.children.splice(this.parent.children.indexOf(this), 1);\n        }\n        else if (this.parent instanceof pixi_js_1.Container) {\n            this.parent.removeChild(this.container);\n        }\n        else if (this.parent === null) {\n            this.manager.children.splice(this.manager.children.indexOf(this), 1);\n        }\n        this.container.destroy({\n            children: true,\n            texture: true\n        });\n        for (const child of this.children) {\n            child.destroy();\n        }\n    }\n}\nexports.UIComponent = UIComponent;\n\n\n//# sourceURL=webpack://squads/./src/game/gui/uiComponent.ts?")},"./src/game/gui/uiManager.ts":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.UIManager = void 0;\nconst uiBuilder_1 = __webpack_require__(/*! ./uiBuilder */ "./src/game/gui/uiBuilder.ts");\nconst math_1 = __webpack_require__(/*! ../util/math */ "./src/game/util/math.ts");\nclass UIManager {\n    game;\n    builder;\n    children = [];\n    worldmap = {\n        visible: false,\n        range: 10000,\n        interactionMode: \'toggle\',\n        blips: [],\n        setVisibility: (set) => {\n            this.worldmap.visible = set;\n            this.builder.elements.worldmapContainer && (this.builder.elements.worldmapContainer.container.visible = set);\n        },\n        register: (x, y, graphic) => {\n            this.worldmap.blips.push({ x, y, graphic });\n        }\n    };\n    debug = {\n        setHeight: (height) => {\n            this.builder.elements.debug && (this.builder.elements.debug.container.height = height);\n        }\n    };\n    constructor(game) {\n        this.game = game;\n        this.builder = new uiBuilder_1.UIBuilder(this);\n    }\n    update(delta) {\n        const w = this.builder.minimap.width / this.game.input.maxZoom;\n        const h = this.builder.minimap.height / this.game.input.maxZoom;\n        const mx = (0, math_1.map)(-this.game.playerManager.agent.position.x * this.game.input.maxZoom, -this.worldmap.range / 2, this.worldmap.range / 2, 0, w) + 10;\n        const my = (0, math_1.map)(-this.game.playerManager.agent.position.y * this.game.input.maxZoom, -this.worldmap.range / 2, this.worldmap.range / 2, 0, h) + 10;\n        this.builder.minimap.position.set(mx, my);\n        if (this.worldmap.visible) {\n            const px = (0, math_1.map)(this.game.playerManager.agent.position.x, -this.worldmap.range / 2, this.worldmap.range / 2, 0, this.builder.worldmap.width) + 10;\n            const py = (0, math_1.map)(this.game.playerManager.agent.position.y, -this.worldmap.range / 2, this.worldmap.range / 2, 0, this.builder.worldmap.height) + 10;\n            this.builder.player.position.set(px, py);\n            this.builder.viewport.clear();\n            this.builder.viewport.lineStyle(1, 0xffffff);\n            const tl = this.game.camera.out(0, 0);\n            const br = this.game.camera.out(this.game.width, this.game.height);\n            const tlx = (0, math_1.map)(tl.x, -this.worldmap.range / 2, this.worldmap.range / 2, 0, this.builder.worldmap.width) + 10;\n            const tly = (0, math_1.map)(tl.y, -this.worldmap.range / 2, this.worldmap.range / 2, 0, this.builder.worldmap.height) + 10;\n            const brx = (0, math_1.map)(br.x, -this.worldmap.range / 2, this.worldmap.range / 2, 0, this.builder.worldmap.width) + 10;\n            const bry = (0, math_1.map)(br.y, -this.worldmap.range / 2, this.worldmap.range / 2, 0, this.builder.worldmap.height) + 10;\n            this.builder.viewport.drawRect(tlx, tly, brx - tlx, bry - tly);\n        }\n    }\n    resize() {\n        for (const child of this.children) {\n            child.resize();\n        }\n    }\n}\nexports.UIManager = UIManager;\n\n\n//# sourceURL=webpack://squads/./src/game/gui/uiManager.ts?')},"./src/game/input/inputManager.ts":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.InputManager = void 0;\nconst matter_js_1 = __webpack_require__(/*! matter-js */ \"./node_modules/matter-js/build/matter.js\");\nconst keyboard_1 = __webpack_require__(/*! ./keyboard */ \"./src/game/input/keyboard.ts\");\nconst mouse_1 = __webpack_require__(/*! ./mouse */ \"./src/game/input/mouse.ts\");\nconst math_1 = __webpack_require__(/*! ../util/math */ \"./src/game/util/math.ts\");\nclass InputManager {\n    game;\n    mouse;\n    keyboard;\n    mousePos = { x: 0, y: 0 };\n    down = false;\n    button = 0;\n    click = false;\n    scrollCount = 0;\n    scrollAmount = 1.33;\n    scrollBounds = { min: -2, max: 4 };\n    get maxZoom() {\n        return Math.pow(this.scrollAmount, this.scrollBounds.max);\n    }\n    constructor(game) {\n        this.game = game;\n        this.mouse = new mouse_1.Mouse();\n        this.keyboard = new keyboard_1.Keyboard();\n        this.game.app.stage.eventMode = \"static\";\n        this.game.app.stage.hitArea = this.game.app.screen;\n        this.game.app.stage.addEventListener(\"pointermove\", (e) => {\n            this.mousePos = { x: e.x, y: e.y };\n        });\n        this.game.app.stage.addEventListener(\"mousedown\", (e) => {\n            this.click = true;\n            this.down = true;\n            this.button = [0, 1, 2].find((i) => e.button == i) ?? 0;\n        });\n        this.game.app.stage.addEventListener(\"mouseup\", (e) => {\n            this.down = false;\n        });\n        this.mouse.scroll((deltaY) => {\n            this.scrollCount += deltaY;\n            this.scrollCount = (0, math_1.clamp)(this.scrollCount, this.scrollBounds.min, this.scrollBounds.max);\n            this.game.camera.zoom = Math.pow(this.scrollCount < 0 ? this.scrollAmount : (1 / this.scrollAmount), Math.abs(this.scrollCount));\n        });\n        document.addEventListener(\"contextmenu\", (e) => {\n            e.preventDefault();\n        }, false);\n        this.keyboard.key('m').press(() => {\n            this.game.gui.worldmap.setVisibility(!this.game.gui.worldmap.visible);\n        }).release(() => {\n            if (this.game.gui.worldmap.interactionMode != 'toggle') {\n                this.game.gui.worldmap.setVisibility(false);\n            }\n        });\n    }\n    update(delta) {\n        const center = { x: this.game.width / 2, y: this.game.height / 2 };\n        const diff = { x: this.mousePos.x - center.x, y: this.mousePos.y - center.y };\n        const rotation = Math.atan2(diff.y, diff.x);\n        this.game.playerManager.agent.rotation = rotation;\n        const raw = { x: 0, y: 0 };\n        if (this.keyboard.key('ArrowUp').isDown || this.keyboard.key('w').isDown)\n            raw.y -= 1;\n        if (this.keyboard.key('ArrowDown').isDown || this.keyboard.key('s').isDown)\n            raw.y += 1;\n        if (this.keyboard.key('ArrowLeft').isDown || this.keyboard.key('a').isDown)\n            raw.x -= 1;\n        if (this.keyboard.key('ArrowRight').isDown || this.keyboard.key('d').isDown)\n            raw.x += 1;\n        const move = matter_js_1.Vector.mult(matter_js_1.Vector.normalise(raw), 3);\n        matter_js_1.Body.setVelocity(this.game.playerManager.agent.body, move);\n    }\n    reset() {\n        this.click = false;\n    }\n}\nexports.InputManager = InputManager;\n\n\n//# sourceURL=webpack://squads/./src/game/input/inputManager.ts?")},"./src/game/input/keyboard.ts":(__unused_webpack_module,exports)=>{"use strict";eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Keyboard = void 0;\nclass Key {\n    value;\n    state = false;\n    isDown = false;\n    isUp = true;\n    _press = [];\n    _release = [];\n    press = (f) => {\n        this._press.push(f);\n        return this;\n    };\n    release = (f) => {\n        this._release.push(f);\n        return this;\n    };\n    constructor(value) {\n        this.value = value;\n    }\n}\nclass Keyboard {\n    keys;\n    nDown;\n    destroy;\n    constructor() {\n        this.keys = [];\n        this.nDown = 0;\n        const downListener = this.onDown.bind(this);\n        const upListener = this.onUp.bind(this);\n        window.addEventListener('keydown', downListener, false);\n        window.addEventListener('keyup', upListener, false);\n        this.destroy = () => {\n            window.removeEventListener('keydown', downListener);\n            window.removeEventListener('keyup', upListener);\n        };\n    }\n    onDown(e) {\n        const key = this.keys.find(k => k.value == e.key);\n        if (key) {\n            e.preventDefault();\n            if (key.isUp) {\n                key.state = !key.state;\n                key._press.forEach(f => f());\n                this.nDown++;\n            }\n            key.isDown = true;\n            key.isUp = false;\n        }\n    }\n    onUp(e) {\n        const key = this.keys.find(k => k.value == e.key);\n        if (key) {\n            e.preventDefault();\n            if (key.isDown) {\n                key._release.forEach(f => f());\n                this.nDown = Math.max(0, this.nDown - 1);\n            }\n            key.isDown = false;\n            key.isUp = true;\n        }\n    }\n    key = (value) => {\n        const find = this.keys.find(k => k.value == value);\n        if (find)\n            return find;\n        const key = new Key(value);\n        this.keys.push(key);\n        return key;\n    };\n    getKeys = (...values) => {\n        return values.map(this.key);\n    };\n}\nexports.Keyboard = Keyboard;\n\n\n//# sourceURL=webpack://squads/./src/game/input/keyboard.ts?")},"./src/game/input/mouse.ts":(__unused_webpack_module,exports)=>{"use strict";eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Mouse = void 0;\nclass Mouse {\n    destroy;\n    constructor() {\n        const scrollListener = (e) => {\n            e.preventDefault();\n            this._scroll(e.deltaY == 0 ? 0 : (e.deltaY > 0 ? 1 : -1));\n        };\n        window.addEventListener('wheel', scrollListener, { passive: false });\n        this.destroy = () => {\n            window.removeEventListener('wheel', scrollListener);\n        };\n    }\n    _scroll = (deltaY) => { };\n    scroll = (f) => {\n        this._scroll = f;\n        return this;\n    };\n}\nexports.Mouse = Mouse;\n\n\n//# sourceURL=webpack://squads/./src/game/input/mouse.ts?")},"./src/game/main/camera.ts":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.Camera = void 0;\n__webpack_require__(/*! @pixi/math-extras */ "./node_modules/@pixi/math-extras/lib/index.js");\nconst math_1 = __webpack_require__(/*! ../util/math */ "./src/game/util/math.ts");\nclass Camera {\n    game;\n    targetPos = { x: 0, y: 0 };\n    targetZoom = 1;\n    _pos = this.targetPos;\n    _zoom = this.targetZoom;\n    moveEase = 0.5;\n    scaleEase = 0.75;\n    vision = 1000;\n    aspectControl = 1;\n    get position() {\n        return this._pos;\n    }\n    set position(value) {\n        this.targetPos = value;\n    }\n    get scale() {\n        return this._zoom * this.aspectControl;\n    }\n    set zoom(value) {\n        this.targetZoom = value;\n    }\n    constructor(game) {\n        this.game = game;\n        this.calculate();\n    }\n    calculate = () => {\n        const max = Math.max(this.game.width, this.game.height);\n        this.aspectControl = max / this.vision;\n    };\n    in = (a, b) => {\n        const point = typeof a === "number" ? { x: a, y: b ?? a } : a;\n        return {\n            x: (point.x - this.position.x) * this.scale + this.game.width / 2,\n            y: (point.y - this.position.y) * this.scale + this.game.height / 2\n        };\n    };\n    out = (a, b) => {\n        const point = typeof a === "number" ? { x: a, y: b ?? a } : a;\n        return {\n            x: (point.x - this.game.width / 2) / this.scale + this.position.x,\n            y: (point.y - this.game.height / 2) / this.scale + this.position.y\n        };\n    };\n    cull = (point, r) => {\n        const { width, height } = this.game;\n        const range = r * this.scale;\n        return !(point.x < -range || point.x > width + range || point.y < -range || point.y > height + range);\n    };\n    update(delta, smooth = { position: true, zoom: true }) {\n        this._pos.x = smooth.position ? (0, math_1.lerp)(this._pos.x, this.targetPos.x, 1 - Math.pow(this.moveEase, delta)) : this.targetPos.x;\n        this._pos.y = smooth.position ? (0, math_1.lerp)(this._pos.y, this.targetPos.y, 1 - Math.pow(this.moveEase, delta)) : this.targetPos.y;\n        this._zoom = smooth.zoom ? Math.exp((0, math_1.lerp)(Math.log(this._zoom), Math.log(this.targetZoom), 1 - Math.pow(this.scaleEase, delta))) : this.targetZoom;\n    }\n    resize() {\n        this.calculate();\n    }\n}\nexports.Camera = Camera;\n\n\n//# sourceURL=webpack://squads/./src/game/main/camera.ts?')},"./src/game/main/debug.ts":(__unused_webpack_module,exports)=>{"use strict";eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.Debug = void 0;\nclass Debug {\n    game;\n    data = new Map();\n    constructor(game) {\n        this.game = game;\n    }\n    set(key, value) {\n        if (this.data.size > 3 && !this.data.has("key"))\n            return;\n        this.data.set(key, {\n            value,\n            timestamp: Date.now()\n        });\n    }\n    update(delta) {\n        let text = "";\n        this.data.forEach(({ value }, k) => {\n            text += `${k}: ${value}` + "\\n";\n        });\n        this.game.gui.builder.debug.text = text;\n    }\n    reset() {\n        this.data.forEach((v, k) => {\n            if (Date.now() - v.timestamp > 5000) {\n                this.data.delete(k);\n            }\n        });\n    }\n}\nexports.Debug = Debug;\n\n\n//# sourceURL=webpack://squads/./src/game/main/debug.ts?')},"./src/game/main/game.ts":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.Game = void 0;\nconst pixi_js_1 = __webpack_require__(/*! pixi.js */ "./node_modules/pixi.js/lib/index.js");\nconst matter_js_1 = __webpack_require__(/*! matter-js */ "./node_modules/matter-js/build/matter.js");\nconst inputManager_1 = __webpack_require__(/*! ../input/inputManager */ "./src/game/input/inputManager.ts");\nconst grid_1 = __webpack_require__(/*! ./grid */ "./src/game/main/grid.ts");\nconst playerManager_1 = __webpack_require__(/*! ./playerManager */ "./src/game/main/playerManager.ts");\nconst trackingCamera_1 = __webpack_require__(/*! ./trackingCamera */ "./src/game/main/trackingCamera.ts");\nconst debug_1 = __webpack_require__(/*! ./debug */ "./src/game/main/debug.ts");\nconst fonts_1 = __webpack_require__(/*! ../basic/fonts */ "./src/game/basic/fonts.ts");\nconst uiManager_1 = __webpack_require__(/*! ../gui/uiManager */ "./src/game/gui/uiManager.ts");\nconst test_1 = __webpack_require__(/*! ./test */ "./src/game/main/test.ts");\nconst loader_1 = __webpack_require__(/*! ./loader */ "./src/game/main/loader.ts");\nclass Game {\n    app;\n    engine;\n    // Initialization components\n    loader;\n    fonts;\n    // Game components\n    debug;\n    input;\n    playerManager;\n    camera;\n    gui;\n    grid;\n    test;\n    // Layers\n    layers = {\n        background: new pixi_js_1.Container(),\n        surface: new pixi_js_1.Container(),\n        player: new pixi_js_1.Container(),\n        ui: new pixi_js_1.Container(),\n        debug: new pixi_js_1.Container()\n    };\n    // Game state\n    loaded = false;\n    started = false;\n    // Window\n    lastWidth = -1;\n    lastHeight = -1;\n    get width() {\n        return this.app.view.width;\n    }\n    get height() {\n        return this.app.view.height;\n    }\n    constructor(app, engine, { load, onUpdate, onProgress, onComplete }) {\n        this.app = app;\n        this.engine = engine;\n        this.fonts = new fonts_1.Fonts(this);\n        this.loader = new loader_1.AssetLoader(this);\n        this.loader.load({ load, onUpdate, onProgress,\n            onComplete: () => {\n                this.initialize();\n                onComplete?.();\n            }\n        });\n    }\n    initialize() {\n        this.app.stage.addChild(this.layers.background);\n        this.app.stage.addChild(this.layers.surface);\n        this.app.stage.addChild(this.layers.player);\n        this.app.stage.addChild(this.layers.ui);\n        this.app.stage.addChild(this.layers.debug);\n        this.debug = new debug_1.Debug(this);\n        this.input = new inputManager_1.InputManager(this);\n        this.playerManager = new playerManager_1.PlayerManager(this);\n        this.camera = new trackingCamera_1.TrackingCamera(this, this.playerManager.agent);\n        this.gui = new uiManager_1.UIManager(this);\n        this.grid = new grid_1.Grid(this);\n        this.test = new test_1.Test(this);\n        this.app.ticker.add(this.update.bind(this));\n        this.loaded = true;\n    }\n    start() {\n        if (!this.loaded)\n            throw new Error(`Cannot start game before loading assets!`);\n        this.test.start();\n        this.gui.builder.start();\n        this.app.ticker.start();\n        this.started = true;\n    }\n    update(delta) {\n        if (this.lastWidth != this.width || this.lastHeight != this.height) {\n            this.resize();\n        }\n        this.lastWidth = this.width;\n        this.lastHeight = this.height;\n        this.debug.set("FPS", `${Math.round(this.app.ticker.FPS)}`);\n        this.debug.set("POS", `${Math.round(this.playerManager.agent.position.x)}, ${Math.round(this.playerManager.agent.position.y)}`);\n        this.debug.set("ROT", `${Math.round(this.playerManager.agent.rotation * 180 / Math.PI)}`);\n        this.debug.update(delta);\n        this.input.update(delta);\n        this.camera.update(delta);\n        this.grid.update(delta);\n        this.playerManager.update(delta);\n        this.gui.update(delta);\n        this.test.update(delta);\n        matter_js_1.Engine.update(this.engine, this.app.ticker.deltaMS, 1);\n        this.reset();\n    }\n    resize() {\n        this.gui.resize();\n        this.camera.resize();\n        this.grid.resize();\n    }\n    reset() {\n        this.input.reset();\n        this.debug.reset();\n    }\n}\nexports.Game = Game;\n\n\n//# sourceURL=webpack://squads/./src/game/main/game.ts?')},"./src/game/main/grid.ts":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.Grid = void 0;\nconst pixi_js_1 = __webpack_require__(/*! pixi.js */ "./node_modules/pixi.js/lib/index.js");\nclass Grid {\n    game;\n    grid = [];\n    gap = 400;\n    container = new pixi_js_1.Container();\n    constructor(game) {\n        this.game = game;\n        this.game.layers.background.addChild(this.container);\n        this.generate();\n    }\n    generate() {\n        this.grid.forEach(line => line.destroy());\n        this.grid = [];\n        const gap = this.gap;\n        const { x: cx, y: cy } = this.game.camera.out(this.game.width / 2, this.game.height / 2);\n        const [mx, my] = [cx - cx % gap, cy - cy % gap];\n        const { x: tlx, y: tly } = this.game.camera.out(0, 0);\n        const { x: brx, y: bry } = this.game.camera.out(this.game.width, this.game.height);\n        const [tx, ty] = [Math.abs(brx - tlx) / 2, Math.abs(bry - tly) / 2];\n        for (let x = mx; x < mx + tx + gap; x += gap) {\n            const { x: dx } = this.game.camera.in(x, tly);\n            const line = new pixi_js_1.Graphics();\n            line.lineStyle({ color: new pixi_js_1.Color(0x095a6e), width: 2 }).moveTo(dx, 0).lineTo(dx, this.game.height);\n            this.container.addChild(line);\n            this.grid.push(line);\n        }\n        for (let x = mx - gap; x > mx - tx - gap; x -= gap) {\n            const { x: dx } = this.game.camera.in(x, tly);\n            const line = new pixi_js_1.Graphics();\n            line.lineStyle({ color: new pixi_js_1.Color(0x095a6e), width: 2 }).moveTo(dx, 0).lineTo(dx, this.game.height);\n            this.container.addChild(line);\n            this.grid.push(line);\n        }\n        for (let y = my; y < my + ty + gap; y += gap) {\n            const { y: dy } = this.game.camera.in(tlx, y);\n            const line = new pixi_js_1.Graphics();\n            line.lineStyle({ color: new pixi_js_1.Color(0x095a6e), width: 2 }).moveTo(0, dy).lineTo(this.game.width, dy);\n            this.container.addChild(line);\n            this.grid.push(line);\n        }\n        for (let y = my - gap; y > my - ty - gap; y -= gap) {\n            const { y: dy } = this.game.camera.in(tlx, y);\n            const line = new pixi_js_1.Graphics();\n            line.lineStyle({ color: new pixi_js_1.Color(0x095a6e), width: 2 }).moveTo(0, dy).lineTo(this.game.width, dy);\n            this.container.addChild(line);\n            this.grid.push(line);\n        }\n    }\n    update(delta) {\n        this.generate();\n    }\n    resize() {\n        this.generate();\n    }\n}\nexports.Grid = Grid;\n\n\n//# sourceURL=webpack://squads/./src/game/main/grid.ts?')},"./src/game/main/loader.ts":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.AssetLoader = void 0;\nconst pixi_js_1 = __webpack_require__(/*! pixi.js */ "./node_modules/pixi.js/lib/index.js");\nclass AssetLoader {\n    game;\n    assets = new Map();\n    constructor(game) {\n        this.game = game;\n    }\n    async load({ load: assets, onUpdate, onProgress, onComplete }) {\n        if (assets.length === 0) {\n            onProgress?.(1);\n        }\n        for (const [index, asset] of assets.entries()) {\n            try {\n                onUpdate?.(`Loading asset: ${asset.name}`);\n                await this.create(asset);\n                onProgress?.((index + 1) / assets.length);\n            }\n            catch (error) {\n                console.error(`Error loading asset: ${asset.name}`, error);\n            }\n        }\n        onUpdate?.(`Done loading assets!`);\n        await new Promise(resolve => setTimeout(resolve, 1000));\n        onComplete?.();\n    }\n    async create(asset) {\n        if (this.assets.has(asset.name))\n            return;\n        const graphics = await asset.generator();\n        const texture = this.game.app.renderer.generateTexture(graphics, {\n            resolution: 2\n        });\n        graphics.destroy({\n            children: true,\n            texture: true,\n            baseTexture: true\n        });\n        this.assets.set(asset.name, texture);\n    }\n    getAsset(name) {\n        return this.assets.get(name) ?? pixi_js_1.Texture.WHITE;\n    }\n}\nexports.AssetLoader = AssetLoader;\n\n\n//# sourceURL=webpack://squads/./src/game/main/loader.ts?')},"./src/game/main/playerManager.ts":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.PlayerManager = void 0;\nconst agent_1 = __webpack_require__(/*! ../basic/agent */ "./src/game/basic/agent.ts");\nconst definitions_1 = __webpack_require__(/*! ../equipables/definitions */ "./src/game/equipables/definitions.ts");\nclass PlayerManager {\n    game;\n    agent;\n    constructor(game) {\n        this.game = game;\n        this.agent = new agent_1.Agent(game);\n        this.agent.equip(definitions_1.melees.none.fists);\n        this.game.input.keyboard.key(" ").press(() => {\n            if (this.agent.equipped?.info.name == "fists") {\n                this.agent.equip(definitions_1.melees.singlehanded.bayonet);\n            }\n            else if (this.agent.equipped?.info.name == "bayonet") {\n                this.agent.equip(definitions_1.melees.singlehanded.karambit);\n            }\n            else if (this.agent.equipped?.info.name == "karambit") {\n                this.agent.equip(definitions_1.melees.twohanded.sledgehammer);\n            }\n            else if (this.agent.equipped?.info.name == "sledgehammer") {\n                this.agent.equip(definitions_1.guns.pistollike.m9);\n            }\n            else if (this.agent.equipped?.info.name == "m9") {\n                this.agent.equip(definitions_1.guns.riflelike.ak47);\n            }\n            else {\n                this.agent.equip(definitions_1.melees.none.fists);\n            }\n        });\n    }\n    update(delta) {\n        this.agent.equipped?.update();\n        this.agent.update(delta);\n    }\n}\nexports.PlayerManager = PlayerManager;\n\n\n//# sourceURL=webpack://squads/./src/game/main/playerManager.ts?')},"./src/game/main/test.ts":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.Test = void 0;\nconst matter_js_1 = __webpack_require__(/*! matter-js */ "./node_modules/matter-js/build/matter.js");\nconst pixi_js_1 = __webpack_require__(/*! pixi.js */ "./node_modules/pixi.js/lib/index.js");\nconst gameObject_1 = __webpack_require__(/*! ../basic/gameObject */ "./src/game/basic/gameObject.ts");\nclass Test {\n    game;\n    gameObjects = [];\n    constructor(game) {\n        this.game = game;\n    }\n    start() {\n        for (let i = 0; i < 1000; i++) {\n            const x = Math.random() * 10000 - 5000;\n            const y = Math.random() * 10000 - 5000;\n            const r = Math.random() * 100 + 5;\n            const body = matter_js_1.Bodies.circle(x, y, r, {\n                friction: 0,\n                frictionAir: 0,\n                frictionStatic: 0,\n                isStatic: true\n            });\n            const color = new pixi_js_1.Color(Math.random() * 0xffffff);\n            const obj = new gameObject_1.GameObject(this.game, body, {\n                layer: "surface",\n                cull: r * 2\n            });\n            this.game.gui.worldmap.register(x, y, new pixi_js_1.Graphics().beginFill(color).drawCircle(0, 0, r).endFill());\n            this.gameObjects.push(obj);\n            const graphic = new pixi_js_1.Graphics();\n            graphic.beginFill(color);\n            graphic.drawCircle(0, 0, r);\n            graphic.endFill();\n            obj.container.addChild(graphic);\n        }\n    }\n    update(delta) {\n        for (let obj of this.gameObjects) {\n            obj.update(delta);\n        }\n    }\n}\nexports.Test = Test;\n\n\n//# sourceURL=webpack://squads/./src/game/main/test.ts?')},"./src/game/main/trackingCamera.ts":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.TrackingCamera = void 0;\nconst pixi_js_1 = __webpack_require__(/*! pixi.js */ "./node_modules/pixi.js/lib/index.js");\nconst camera_1 = __webpack_require__(/*! ./camera */ "./src/game/main/camera.ts");\nclass TrackingCamera extends camera_1.Camera {\n    target;\n    constructor(game, target) {\n        super(game);\n        this.target = target;\n    }\n    update(delta) {\n        const pos = this.target instanceof pixi_js_1.Point ? this.target : this.target.position;\n        this.position = {\n            x: pos.x,\n            y: pos.y\n        };\n        super.update(delta, { position: false, zoom: true });\n    }\n}\nexports.TrackingCamera = TrackingCamera;\n\n\n//# sourceURL=webpack://squads/./src/game/main/trackingCamera.ts?')},"./src/game/util/curves.ts":(__unused_webpack_module,exports)=>{"use strict";eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.linear = exports.smoothstep = void 0;\nconst smoothstep = (t) => t * t * (3 - 2 * t);\nexports.smoothstep = smoothstep;\nconst linear = (t) => t;\nexports.linear = linear;\n\n\n//# sourceURL=webpack://squads/./src/game/util/curves.ts?')},"./src/game/util/math.ts":(__unused_webpack_module,exports)=>{"use strict";eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.angleTo = exports.angleBetween = exports.mod = exports.equalsXY = exports.lerpXY = exports.lerp = exports.clamp = exports.map = void 0;\nconst map = (value, min1, max1, min2, max2) => {\n    return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n};\nexports.map = map;\nconst clamp = (value, min, max) => Math.min(Math.max(value, min), max);\nexports.clamp = clamp;\nconst lerp = (a, b, t) => a + (b - a) * t;\nexports.lerp = lerp;\nconst lerpXY = (a, b, t) => {\n    return {\n        x: (0, exports.lerp)(a.x, b.x, t),\n        y: (0, exports.lerp)(a.y, b.y, t)\n    };\n};\nexports.lerpXY = lerpXY;\nconst equalsXY = (a, b, e = 0.001) => {\n    return Math.abs(a.x - b.x) < e && Math.abs(a.y - b.y) < e;\n};\nexports.equalsXY = equalsXY;\nconst mod = (a, n) => (a % n + n) % n;\nexports.mod = mod;\nconst angleBetween = (a, b) => Math.abs((0, exports.mod)(b - a + Math.PI, 2 * Math.PI) - Math.PI);\nexports.angleBetween = angleBetween;\nconst angleTo = (current, target) => {\n    const sin = Math.sin(target - current);\n    if (sin == 0)\n        return 0;\n    return Math.abs(sin) / sin;\n};\nexports.angleTo = angleTo;\n\n\n//# sourceURL=webpack://squads/./src/game/util/math.ts?')},"?4f7e":()=>{eval("/* (ignored) */\n\n//# sourceURL=webpack://squads/./util.inspect_(ignored)?")}},__webpack_module_cache__={},deferred;function __webpack_require__(n){var e=__webpack_module_cache__[n];if(void 0!==e)return e.exports;var t=__webpack_module_cache__[n]={id:n,loaded:!1,exports:{}};return __webpack_modules__[n].call(t.exports,t,t.exports,__webpack_require__),t.loaded=!0,t.exports}__webpack_require__.m=__webpack_modules__,deferred=[],__webpack_require__.O=(n,e,t,i)=>{if(!e){var s=1/0;for(l=0;l<deferred.length;l++){for(var[e,t,i]=deferred[l],a=!0,o=0;o<e.length;o++)(!1&i||s>=i)&&Object.keys(__webpack_require__.O).every((n=>__webpack_require__.O[n](e[o])))?e.splice(o--,1):(a=!1,i<s&&(s=i));if(a){deferred.splice(l--,1);var r=t();void 0!==r&&(n=r)}}return n}i=i||0;for(var l=deferred.length;l>0&&deferred[l-1][2]>i;l--)deferred[l]=deferred[l-1];deferred[l]=[e,t,i]},__webpack_require__.d=(n,e)=>{for(var t in e)__webpack_require__.o(e,t)&&!__webpack_require__.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:e[t]})},__webpack_require__.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),__webpack_require__.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),__webpack_require__.r=n=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},__webpack_require__.nmd=n=>(n.paths=[],n.children||(n.children=[]),n),(()=>{var n={main:0};__webpack_require__.O.j=e=>0===n[e];var e=(e,t)=>{var i,s,[a,o,r]=t,l=0;if(a.some((e=>0!==n[e]))){for(i in o)__webpack_require__.o(o,i)&&(__webpack_require__.m[i]=o[i]);if(r)var d=r(__webpack_require__)}for(e&&e(t);l<a.length;l++)s=a[l],__webpack_require__.o(n,s)&&n[s]&&n[s][0](),n[s]=0;return __webpack_require__.O(d)},t=self.webpackChunksquads=self.webpackChunksquads||[];t.forEach(e.bind(null,0)),t.push=e.bind(null,t.push.bind(t))})();var __webpack_exports__=__webpack_require__.O(void 0,["pixi","vendor","matter"],(()=>__webpack_require__("./src/game/entry.ts")));__webpack_exports__=__webpack_require__.O(__webpack_exports__)})();